<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2048_Finish_report</title>
      <link href="2021/04/07/2048-finish-report/"/>
      <url>2021/04/07/2048-finish-report/</url>
      
        <content type="html"><![CDATA[<h1 id="2048游戏及管理平台"><a href="#2048游戏及管理平台" class="headerlink" title="2048游戏及管理平台"></a>2048游戏及管理平台</h1><h2 id="一、项目内容"><a href="#一、项目内容" class="headerlink" title="一、项目内容"></a>一、项目内容</h2><h3 id="1-需求分析"><a href="#1-需求分析" class="headerlink" title="1.需求分析"></a>1.需求分析</h3><h4 id="1-1-设计目标"><a href="#1-1-设计目标" class="headerlink" title="1.1 设计目标"></a>1.1 设计目标</h4><h5 id="1、基本要求："><a href="#1、基本要求：" class="headerlink" title="1、基本要求："></a>1、基本要求：</h5><p>（1）布设游戏的场景；<br>（2）管理游戏的玩家,包括记录并显示玩家的用户名、实时排名以及得分，游戏过程中的记录信息包括玩家操作等；<br>（3）按规则执行游戏过程，判定游戏胜利；<br>（4）记录游戏过程包括玩家操作以及每一步操作的结果，并可以通过图形界面演示重现；<br>（5）游戏规则：每次可以选择上下左右其中一个方向去滑动，每滑动一次，所有的数字方块都会往滑动的方向靠拢外，系统也会在空白的地方乱数出现一个数字方块，相同数字的方块在靠拢、相撞时会相加。系统给予的数字方块不是2就是4，玩家要想办法在这小小的16格范围中凑出“2048”这个数字方块；<br>（6）矩阵的四周有四个按钮，分别表示向左、向右、向上、向下移动。当某一方向无法移动时，该按钮应该被隐藏（变灰）。</p><h5 id="2、发挥部分："><a href="#2、发挥部分：" class="headerlink" title="2、发挥部分："></a>2、发挥部分：</h5><p>（1）限定游戏时间：在游戏界面添加倒计时，并设计倒计时程序。当计时到时游戏结束并重置界面；<br>（2）添加背景音乐；<br>（3）增加滚动字幕，字幕内容为一些名人名言，提升游戏过程中的趣味性；<br>（4）在演示玩家操作时，用户可选择演示播放速度，以满足用户不同需求；<br>（5）实现数据可迁移，方便用户在不同PC设备上使用；<br>（6）添加用户登录界面，方便对玩家的管理；<br>（7）在游戏界面添加时间日期显示，显示当前的日期和时间；<br>（8）添加键盘控制功能，玩家可以通过键盘控制界面上下左右操作。</p><h4 id="1-2-功能需求"><a href="#1-2-功能需求" class="headerlink" title="1.2 功能需求"></a>1.2 功能需求</h4><p>（1）用户登录：打开游戏程序后，用户在用户名输入框输入用户名即可进入游戏。<br>（2）开始游戏：游戏界面左上角显示游戏倒计时，用户应在倒计时结束前使游戏面盘内的数字尽可能大。用户可以通过鼠标点击界面的四个方向按钮或者键盘的上下左右键进行操作。当倒计时间到或者游戏无法继续进行时，将弹出“Game Over!”提示信息。<br>（3）退出登录：当用户想要切换登录账户或者退出游戏时，可以点击界面右下角的“退出登陆”按键，游戏将返回登陆界面，同时正在进行的游戏将中断。<br>（4）排行榜：游戏界面右侧文本框显示游戏玩家实时排名。若用户需要刷新排名，可点击右上角“刷新”按键。<br>（5）回放按键：若用户需要回访排行榜内玩家游戏过程，可先在右下角下拉文本框内选择要观看的玩家排名，后点击“观看”按键。之后玩家在弹出的对话框内选择倍速播放的速度，游戏面盘内会按照设定倍速演示游戏过程。演示结束后，游戏面盘会重置，回到游戏。</p><p>（6）其他功能：<br>    当前时间显示：游戏界面左下角显示当前日期和时间，方便用户管理游戏时间；<br>    名人名言：游戏界面中下部滚动显示名人名言，在游戏过程中增添了文化氛围；<br>    背景音乐：游戏运行过程中会有舒缓的轻音乐作为背景音乐，使用户在游戏过程中保持平静和放松的心情；<br>    操作记录：游戏界面中部文本框内显示用户登录信息和实时操作，方便用户查看与记录。</p><h4 id="1-3-假定和约束"><a href="#1-3-假定和约束" class="headerlink" title="1.3 假定和约束"></a>1.3 假定和约束</h4><p>（1）假定用户在输入用户名等信息后，不使用Enter健输入，而是点击确定按钮。并且假定用户在整个游戏过程中不使用Enter键。因为当用户按下Enter键时，Windows就会自动去找输入焦点落在了哪一个按钮上，当获得焦点的按钮的四周将被点线矩形包围。如果所有按钮都没有获得输入焦点，Windows就会自动去寻找程序或资源所指定的默认按钮(默认按钮边框较粗)。如果对话框没有默认按钮，那么即使对话框中没有OK按钮，OnOK函数也会自动被调用。在本游戏中，OnOK函数内并没有响应，如果用户按下Enter，会导致游戏直接关闭。<br>（2）假定用户在观看回放的过程中，不进行其它操作。因为在程序中，当开始观看时，其它功能会被锁定，无法正常运行。<br>（3）假定用户在使用过程中，不会修改游戏的数据文件。因为游戏中的排名信息以及操作数据是读取自这些数据文件。</p><h3 id="2-结构设计"><a href="#2-结构设计" class="headerlink" title="2.结构设计"></a>2.结构设计</h3><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407205829752.png" alt="image-20210407205829752"></p><p>表1：各模块名称及其作用</p><table><thead><tr><th>名称</th><th>功能</th></tr></thead><tbody><tr><td>用户名输入模块</td><td>使玩家能够输入用户名，并将输入的用户名存储以便后续的调用</td></tr><tr><td>对话框初始化模块</td><td>初始化正式游戏界面，包括绘制面板、消息映射等</td></tr><tr><td>定时器模块</td><td>配置定时器，向倒计时、当前时间显示和名人名言滚动显示等功能提供统一的时间和频率</td></tr><tr><td>操作模块</td><td>配置键盘方向键和四个方向按钮，并对其消息进行拦截和处理，使玩家能通过界面按键和键盘进行控制</td></tr><tr><td>计算模块</td><td>每进行一次操作，对游戏面盘内的数字进行计算</td></tr><tr><td>操作实时显示模块</td><td>在界面文本框内实时显示用户登录信息和操作信息</td></tr><tr><td>文件读写模块</td><td>将用户的基本信息和操作信息通过文件形式存储在硬盘，并且实时更新。在需要时进行读取。</td></tr><tr><td>排行榜模块</td><td>利用所存储的信息，对所有玩家进行排序，并在界面文本框内实时显示玩家排名</td></tr><tr><td>观看模块</td><td>对高分玩家的游戏过程进行回放，用户可以自行选择播放速度</td></tr><tr><td>退出登录模块</td><td>用于切换用户或结束游戏</td></tr></tbody></table><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210510889.png" alt="image-20210407210510889"></p><h3 id="3-详细设计"><a href="#3-详细设计" class="headerlink" title="3.详细设计"></a>3.详细设计</h3><h4 id="3-1-工程建立"><a href="#3-1-工程建立" class="headerlink" title="3.1 工程建立"></a>3.1 工程建立</h4><ol><li><p>打开Visual Studio2017，点击文件——新建——项目；</p></li><li><p>新建MFC应用；</p><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210621548.png" alt="image-20210407210621548"></p></li></ol><p>图3：新建项目界面<br>3. 选择“基于对话框”；</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210631868.png" alt="image-20210407210631868"></p><p>图4：应用程序类型选项界面</p><ol start="4"><li>   点击“完成”即可建立工程。</li></ol><h4 id="3-2-界面设计"><a href="#3-2-界面设计" class="headerlink" title="3.2 界面设计"></a>3.2 界面设计</h4><ol><li><p>打开创建的工程文件，选择资源视图，打开对话框界面；</p><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210722995.png" alt="image-20210407210722995"></p></li></ol><p>图5：对话框初始界面<br>2. 将所需的控件拖入对话框并放置在合适的位置；</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210731733.png" alt="image-20210407210731733"></p><p>图6：完成后的对话框界面<br>3. 再次打开资源视图，创建新的对话框界面为欢迎界面</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210739776.png" alt="image-20210407210739776"></p><p>图7：新建对话框界面操作<br>4. 向新建的对话框界面添加控件</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210748103.png" alt="image-20210407210748103"></p><p>图8：完成后的欢迎界面<br>5. 最后，通过On_Paint 函数对窗口进一步美化，配置字体.背景.窗口大小等，并绘制游戏面盘；</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210759280.png" alt="image-20210407210759280"></p><p>图9：OnPaint函数部分代码</p><h4 id="3-3-用户名输入模块设计"><a href="#3-3-用户名输入模块设计" class="headerlink" title="3.3 用户名输入模块设计"></a>3.3 用户名输入模块设计</h4><ol><li><p>从“资源视图”打开欢迎界面，放置用于用户输入的文本框；</p><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210822757.png" alt="image-20210407210822757"></p></li></ol><p>图10：用户名输入框<br>2. 当按下欢迎界面的确定按钮时，对文本框内文字进行处理。因此在“确定”按钮的响应函数内，首先检测文本框内是否有内容，然后将用户名转存至新建的游戏界面类成员内，之后使用EndDialog函数与DoModal函数打开游戏界面，关闭欢迎界面；</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210830670.png" alt="image-20210407210830670"></p><p>图11：确定按键响应函数</p><h4 id="3-4-定时器模块设计"><a href="#3-4-定时器模块设计" class="headerlink" title="3.4 定时器模块设计"></a>3.4 定时器模块设计</h4><ol><li><p>首先使用类向导，为游戏程序添加WM_TIMER消息映射，并生成OnTimer处理函数；</p><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210907203.png" alt="image-20210407210907203"></p></li></ol><p>图12：类向导界面<br>2. 在初始化函数OnInitDialog中配置两个定时器的编号和定时间隔；</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210917559.png" alt="image-20210407210917559"></p><p>图13：配置定时器代码<br>3. 在生成的OnTimer处理函数中，添加倒计时.显示当前时间以及名人名言滚动显示的代码。通过对nIDEvent变量的判断，为不同的功能选择不同的时间频率；</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210927767.png" alt="image-20210407210927767"></p><p>图14：OnTimer函数部分代码</p><h4 id="3-4-操作模块设计"><a href="#3-4-操作模块设计" class="headerlink" title="3.4 操作模块设计"></a>3.4 操作模块设计</h4><ol><li><p>在游戏中玩家可通过键盘或鼠标点击按钮来操作游戏；</p></li><li><p>键盘操作：通过重载虚函数PreTranslateMessage()对键盘上下左右键进行截取与响应；</p><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407210955093.png" alt="image-20210407210955093"></p></li></ol><p>图15：PreTranslateMessage函数的部分代码<br>3. 鼠标操作：在“资源视图”打开游戏界面对话框，添加四个按钮，表示上下左右，并放置在合适位置，之后在其响应函数中写入相应程序；</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211002388.png" alt="image-20210407211002388"></p><p>图16：“↑”按钮响应函数</p><h4 id="3-5计算模块设计"><a href="#3-5计算模块设计" class="headerlink" title="3.5计算模块设计"></a>3.5计算模块设计</h4><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211013036.png" alt="image-20210407211013036"></p><ol><li><p>累加函数</p><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211057117.png" alt="image-20210407211057117"></p></li></ol><p>图17：累加函数部分代码<br>2. 处理游戏结束：横轴.纵轴分别判断游戏是否能够继续进行。供其它操作函数调用；</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211106277.png" alt="image-20210407211106277"></p><p>图18：处理游戏结束函数部分代码<br>3. 上下左右计算：调用累加函数，循环输出后检测变动，判断此方向能否继续移动。若不能，则将对应按钮置灰。</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211114589.png" alt="image-20210407211114589"></p><p>图19：向上计算函数部分代码    </p><h4 id="3-6界面重置模块设计"><a href="#3-6界面重置模块设计" class="headerlink" title="3.6界面重置模块设计"></a>3.6界面重置模块设计</h4><p>被调用时，将界面清零，并随机生成数值，输出到游戏面盘。之后将游戏结束的信息记录在相应的数据文件内。</p><p>  <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211236989.png" alt="image-20210407211236989">                             </p><p>图20：重置函数部分代码</p><h4 id="3-7文件写入模块设计"><a href="#3-7文件写入模块设计" class="headerlink" title="3.7文件写入模块设计"></a>3.7文件写入模块设计</h4><ol><li><p>使用CStdioFile标准库函数进行文件读写操作，供其它操作函数调用；</p></li><li><p>文件读取部分未集成未模块，相应代码在之后的排行榜及观看模块中均有体现；</p><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211302714.png" alt="image-20210407211302714"></p></li></ol><p>图21：文件写入函数</p><h4 id="3-8排行榜模块设计"><a href="#3-8排行榜模块设计" class="headerlink" title="3.8排行榜模块设计"></a>3.8排行榜模块设计</h4><ol><li><p>创建用户类：其中MAX为用户得分，order为用户在数据文件中所处的位置；</p><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211327374.png" alt="image-20210407211327374"></p></li></ol><p>图22：用户类<br>2. 使用ReadString函数读取文件，用读取到的信息对用户类对象赋值，使用CArray标准库实现追加；</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211333706.png" alt="image-20210407211333706"></p><p>图23：读取和追加部分代码<br>3. 使用交换排序算法对CArray类对象进行排序，并以一定格式输出到文本框控件；</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211342524.png" alt="image-20210407211342524"></p><p>图24：排序与输出功能代码</p><h4 id="3-9观看模块设计"><a href="#3-9观看模块设计" class="headerlink" title="3.9观看模块设计"></a>3.9观看模块设计</h4><ol><li><p>在“资源视图”，放置下拉文本框控件在游戏界面，并添加“观看”按钮；</p><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211419417.png" alt="image-20210407211419417"></p></li></ol><p>图25：观看功能相关控件<br>2. 当玩家按下“观看”按钮时，其响应函数被调用，将布尔型全局变量wop变为FALSE，开启“观看模式”。此时，倒计时停止，玩家操作鼠标或键盘将无效。同时，调用DoModal函数，弹出播放速度选择对话框；</p><p>   <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211427250.png" alt="image-20210407211427250"></p><p>图26：“观看”按钮响应函数部分代码</p><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211433715.png" alt="image-20210407211433715"></p><p>图27：播放速度选择界面<br>3.    根据用户在文本框内所选的玩家信息，在操作数据文件中根据玩家的order成员变量寻找该玩家，找到后将记录的操作信息依次输出至游戏面盘。<br>4.    输出结束后，将变量wop变为TRUE，关闭“观看模式”，玩家继续游戏。</p><h4 id="3-10退出登录模块设计"><a href="#3-10退出登录模块设计" class="headerlink" title="3.10退出登录模块设计"></a>3.10退出登录模块设计</h4><p>用户点击“退出登陆”按钮时，调用EndDialog函数，关闭游戏界面。之后调用DoModal函数，生成新的欢迎界面。</p><h3 id="4-运行结果与分析"><a href="#4-运行结果与分析" class="headerlink" title="4.运行结果与分析"></a>4.运行结果与分析</h3><h4 id="4-1-用户登录功能"><a href="#4-1-用户登录功能" class="headerlink" title="4.1 用户登录功能"></a>4.1 用户登录功能</h4><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211514579.png" alt="image-20210407211514579"></p><p>图28：用户登录界面</p><h4 id="4-2-基础功能（游戏功能）"><a href="#4-2-基础功能（游戏功能）" class="headerlink" title="4.2 基础功能（游戏功能）"></a>4.2 基础功能（游戏功能）</h4><p>​                               <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211538492.png" alt="image-20210407211538492"></p><p>图29：鼠标与键盘操作游戏</p><p> <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211544421.png" alt="image-20210407211544421"></p><p>图30：当一个方向无法移动时，按钮置灰</p><p> <img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211549984.png" alt="image-20210407211549984"></p><p>图31：当所有方向都无法移动时，游戏结束</p><h4 id="4-3当前时间显示功能"><a href="#4-3当前时间显示功能" class="headerlink" title="4.3当前时间显示功能"></a>4.3当前时间显示功能</h4><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211612733.png" alt="image-20210407211612733"></p><p>图32：显示当前日期与时间</p><h4 id="4-4登录信息及实时操作显示功能"><a href="#4-4登录信息及实时操作显示功能" class="headerlink" title="4.4登录信息及实时操作显示功能"></a>4.4登录信息及实时操作显示功能</h4><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211635812.png" alt="image-20210407211635812"></p><p>图33：显示玩家登录信息及操作</p><h4 id="4-5排行榜功能"><a href="#4-5排行榜功能" class="headerlink" title="4.5排行榜功能"></a>4.5排行榜功能</h4><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211649803.png" alt="image-20210407211649803"></p><p>图34：对所有玩家进行排序（最多显示TOP15）</p><h4 id="4-6观看功能"><a href="#4-6观看功能" class="headerlink" title="4.6观看功能"></a>4.6观看功能</h4><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211658280.png" alt="image-20210407211658280"></p><p>图35：下拉文本框与“观看”按键</p><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211729265.png" alt="image-20210407211729265"></p><p>图36：播放速度选择对话框</p><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211734856.png" alt="image-20210407211734856"></p><p>图37：正在观看中</p><h4 id="4-7名人名言显示功能"><a href="#4-7名人名言显示功能" class="headerlink" title="4.7名人名言显示功能"></a>4.7名人名言显示功能</h4><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211750332.png" alt="image-20210407211750332"></p><p>图38：文本框内滚动显示名人名言</p><h4 id="4-8背景音乐功能"><a href="#4-8背景音乐功能" class="headerlink" title="4.8背景音乐功能"></a>4.8背景音乐功能</h4><p>经测试游戏运行中有背景音乐播放</p><h4 id="4-9退出登录功能"><a href="#4-9退出登录功能" class="headerlink" title="4.9退出登录功能"></a>4.9退出登录功能</h4><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210407211815174.png" alt="image-20210407211815174"></p><p>图39：点击“退出登录”后返回欢迎界面</p><h2 id="二、问题解决"><a href="#二、问题解决" class="headerlink" title="二、问题解决"></a>二、问题解决</h2><h4 id="（1）在程序设计过程中，你是否通过自定义类对某些功能进行了封装？这些类主要的功能是什么？"><a href="#（1）在程序设计过程中，你是否通过自定义类对某些功能进行了封装？这些类主要的功能是什么？" class="headerlink" title="（1）在程序设计过程中，你是否通过自定义类对某些功能进行了封装？这些类主要的功能是什么？"></a>（1）在程序设计过程中，你是否通过自定义类对某些功能进行了封装？这些类主要的功能是什么？</h4><p>答：①usr类：表示一个用户的类。成员变量：name——用户名；MAX——得分；order——用户信息在数据文件中的位置。<br>②RandonNum成员函数：无形参，无返回值。随机生成数字2或4，并将其放在游戏面盘的随机位置。<br>③CalcEnd成员函数：无形参，返回BOOL型。判断横轴与纵轴能否继续移动。若能移动，则继续游戏；否则，游戏结束。<br>④reALLBUTTON成员函数：无形参，无返回值。重置四个方向按钮。<br>⑤WriteTXT成员函数：形参CString型，无返回值。向指定文件写入字符串。<br>⑥TravelArrey成员函数：无形参，返回CString型。遍历游戏面盘，并将数据以CString类型返回。<br>⑦TOPList成员函数：无形参，无返回值。将排行榜功能所需的遍历.排序以及输出集成在此函数中。<br>⑧watch成员函数：形参int型，无返回值。完成观看功能，包括查找.遍历.文件读取以及输出。</p><h4 id="（2）小结上机各个环节所出现的错误及解决的办法。"><a href="#（2）小结上机各个环节所出现的错误及解决的办法。" class="headerlink" title="（2）小结上机各个环节所出现的错误及解决的办法。"></a>（2）小结上机各个环节所出现的错误及解决的办法。</h4><p>答：<br><strong>错误一</strong>：定时器相关函数不被执行。<br>解决方法：通过手动输入的配置定时器的代码，即使内容一致，也无法运行。应该通过类向导，加入定时器的消息映射WM_TIMER，程序在执行定时器相关函数。<br><strong>错误二</strong>：调用CString类的Format函数时，报错“没有与参数列表匹配的重载函数”。<br>解决方法：Format函数的形参之一为LPCWSTR类型变量，与字符串的char类型不相符。因此将需要格式化的字符串通过_T函数转换。<br><strong>错误三</strong>：点击“观看”按钮后，本应弹出选择播放速度对话框，但实际情况为界面卡死，无法操作。<br>解决方法：在资源视图中打开要弹出的对话框，将属性中的Visable选项更改为TRUE即可。</p><h2 id="三、主要代码"><a href="#三、主要代码" class="headerlink" title="三、主要代码"></a>三、主要代码</h2><h3 id="1-登陆函数"><a href="#1-登陆函数" class="headerlink" title="1.登陆函数"></a>1.登陆函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CStartDlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">OnBnClickedStartButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    CString str<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//BOOL c;</span>    <span class="token comment" spellcheck="true">//EndDialog(IDD_START_DIALOG);</span>    CMy2048Dlg dlg<span class="token punctuation">;</span>    <span class="token function">GetDlgItem</span><span class="token punctuation">(</span>IDC_EDIT1<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetWindowText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//CEdit1.GetWindowText();</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">!=</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断用户是否输入</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">EndDialog</span><span class="token punctuation">(</span>IDD_START_DIALOG<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//关闭登陆界面</span>            dlg<span class="token punctuation">.</span>Userr<span class="token punctuation">.</span>name <span class="token operator">=</span> str<span class="token punctuation">;</span>            dlg<span class="token punctuation">.</span><span class="token function">DoModal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//调出游戏界面</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">AfxMessageBox</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"请输入用户名"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//提醒用户重新输入</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="2-OnPaint函数"><a href="#2-OnPaint函数" class="headerlink" title="2.OnPaint函数"></a>2.OnPaint函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">OnPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsIconic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        CPaintDC <span class="token function">dc</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 用于绘制的设备上下文</span>        <span class="token function">SendMessage</span><span class="token punctuation">(</span>WM_ICONERASEBKGND<span class="token punctuation">,</span> reinterpret_cast<span class="token operator">&lt;</span>WPARAM<span class="token operator">></span><span class="token punctuation">(</span>dc<span class="token punctuation">.</span><span class="token function">GetSafeHdc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 使图标在工作区矩形中居中</span>        <span class="token keyword">int</span> cxIcon <span class="token operator">=</span> <span class="token function">GetSystemMetrics</span><span class="token punctuation">(</span>SM_CXICON<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> cyIcon <span class="token operator">=</span> <span class="token function">GetSystemMetrics</span><span class="token punctuation">(</span>SM_CYICON<span class="token punctuation">)</span><span class="token punctuation">;</span>        CRect rect<span class="token punctuation">;</span>        <span class="token function">GetClientRect</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token punctuation">(</span>rect<span class="token punctuation">.</span><span class="token function">Width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> cxIcon <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token punctuation">(</span>rect<span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> cyIcon <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 绘制图标</span>        dc<span class="token punctuation">.</span><span class="token function">DrawIcon</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> m_hIcon<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token comment" spellcheck="true">//初始化游戏面盘</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        CRect   <span class="token function">temprect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        CWnd<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">SetWindowPos</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> temprect<span class="token punctuation">.</span><span class="token function">Width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> temprect<span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> SWP_NOZORDER <span class="token operator">|</span> SWP_NOMOVE<span class="token punctuation">)</span><span class="token punctuation">;</span>        CPaintDC <span class="token function">dc</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">GetClientRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>        dc<span class="token punctuation">.</span><span class="token function">FillSolidRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token function">RGB</span><span class="token punctuation">(</span><span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置背景颜色</span>        <span class="token function">GetClientRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取窗口客户区的坐标 客户区坐标是相对窗口客户区的左上角而言的，因此左上角坐标为（0，0）。</span>        rect<span class="token punctuation">.</span>left   <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        rect<span class="token punctuation">.</span>right  <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        rect<span class="token punctuation">.</span>top    <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        rect<span class="token punctuation">.</span>bottom <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        CRgn rgn<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//圆角</span>        CRect rc<span class="token punctuation">;</span>        <span class="token function">GetWindowRect</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获得窗口矩形</span>        rc <span class="token operator">-</span><span class="token operator">=</span> rc<span class="token punctuation">.</span><span class="token function">TopLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        rgn<span class="token punctuation">.</span><span class="token function">CreateRoundRectRgn</span><span class="token punctuation">(</span>rc<span class="token punctuation">.</span>left<span class="token punctuation">,</span> rc<span class="token punctuation">.</span>top<span class="token punctuation">,</span> rc<span class="token punctuation">.</span>right<span class="token punctuation">,</span> rc<span class="token punctuation">.</span>bottom<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//根据窗口矩形创建一个圆角矩形最后两个是形成圆角的大小</span>        <span class="token function">SetWindowRgn</span><span class="token punctuation">(</span>rgn<span class="token punctuation">,</span> TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> nWidth  <span class="token operator">=</span> rect<span class="token punctuation">.</span><span class="token function">Width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token punctuation">(</span>Count<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//每个单元格的宽度</span>        <span class="token keyword">int</span> nHeight <span class="token operator">=</span> rect<span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>Count<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//每个单元格的高度</span>        CFont font<span class="token punctuation">;</span>        font<span class="token punctuation">.</span><span class="token function">CreatePointFont</span><span class="token punctuation">(</span>nHeight<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"Small Fonts"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>dc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//创建字体和大小</span>        CFont<span class="token operator">*</span> oldFont <span class="token operator">=</span> dc<span class="token punctuation">.</span><span class="token function">SelectObject</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//保存旧的字体</span>        dc<span class="token punctuation">.</span><span class="token function">SetBkMode</span><span class="token punctuation">(</span>TRANSPARENT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置背景颜色为透明</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                CRect rectChild<span class="token punctuation">;</span>                rectChild<span class="token punctuation">.</span>left   <span class="token operator">=</span> rect<span class="token punctuation">.</span>left <span class="token operator">+</span> j<span class="token operator">*</span>nWidth<span class="token operator">+</span> nWidth<span class="token punctuation">;</span>                rectChild<span class="token punctuation">.</span>top    <span class="token operator">=</span> rect<span class="token punctuation">.</span>top  <span class="token operator">+</span> i<span class="token operator">*</span>nHeight<span class="token operator">+</span> nHeight<span class="token punctuation">;</span>                rectChild<span class="token punctuation">.</span>right  <span class="token operator">=</span> rectChild<span class="token punctuation">.</span>left <span class="token operator">+</span> nWidth<span class="token punctuation">;</span>                rectChild<span class="token punctuation">.</span>bottom <span class="token operator">=</span> rectChild<span class="token punctuation">.</span>top  <span class="token operator">+</span> nHeight<span class="token punctuation">;</span>                dc<span class="token punctuation">.</span><span class="token function">Draw3dRect</span><span class="token punctuation">(</span>rectChild<span class="token punctuation">,</span><span class="token function">RGB</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">RGB</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>wop<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        CString  strText<span class="token punctuation">;</span>                        strText<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//函数功能是在指定的矩形里写入格式化文本，根据指定的方法对文本格式化</span>                        <span class="token comment" spellcheck="true">//（扩展的制表符，字符对齐、折行等）</span>                        dc<span class="token punctuation">.</span><span class="token function">DrawText</span><span class="token punctuation">(</span>strText<span class="token punctuation">,</span> rectChild<span class="token punctuation">,</span> DT_CENTER <span class="token operator">|</span> DT_VCENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>wop<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>n_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        CString  strText<span class="token punctuation">;</span>                        strText<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">//该函数的功能是在指定的矩形里写入格式化文本，根据指定的方法对文本格式化</span>                        <span class="token comment" spellcheck="true">//（扩展的制表符，字符对齐、折行等）</span>                        dc<span class="token punctuation">.</span><span class="token function">DrawText</span><span class="token punctuation">(</span>strText<span class="token punctuation">,</span> rectChild<span class="token punctuation">,</span> DT_CENTER <span class="token operator">|</span> DT_VCENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        CDialogEx<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">OnPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dc<span class="token punctuation">.</span><span class="token function">SelectObject</span><span class="token punctuation">(</span>oldFont<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//选则回原来的字体</span>        font<span class="token punctuation">.</span><span class="token function">DeleteObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//删除字体</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="3-重置界面函数"><a href="#3-重置界面函数" class="headerlink" title="3.重置界面函数"></a>3.重置界面函数</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">//重置，重新开始界面初始化</span><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">Reset</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//int buff[4][4];</span>    <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    ct <span class="token operator">=</span> COUNT<span class="token punctuation">;</span>    <span class="token function">RandonNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">RandonNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    CString strrrr<span class="token punctuation">;</span>    strrrr<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"u_%s\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Userr<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">WriteNameTXT</span><span class="token punctuation">(</span>strrrr<span class="token punctuation">)</span><span class="token punctuation">;</span>    strrrr<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"L_%s\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Userr<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">WriteTXT</span><span class="token punctuation">(</span>strrrr<span class="token punctuation">)</span><span class="token punctuation">;</span>    CString strr<span class="token punctuation">;</span>    strr <span class="token operator">=</span> <span class="token function">TravelArrey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">WriteTXT</span><span class="token punctuation">(</span>strr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="4-向下运算函数"><a href="#4-向下运算函数" class="headerlink" title="4.向下运算函数"></a>4.向下运算函数</h3><pre class=" language-c"><code class="language-c">bool CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">Down</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>wop<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> tempArray<span class="token punctuation">[</span>Count<span class="token punctuation">]</span><span class="token punctuation">[</span>Count<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">memcpy</span><span class="token punctuation">(</span>tempArray<span class="token punctuation">,</span> m_nArray<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">*</span>Count<span class="token operator">*</span>Count<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">reALLBUTTON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    deque<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> lst<span class="token punctuation">[</span>Count<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//声明一个deque&lt;int>类型的数组 数组长度为4，也就是4个deque&lt;int></span>    <span class="token comment" spellcheck="true">//分组</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                lst<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_front</span><span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//累加</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">Add</span><span class="token punctuation">(</span>lst<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这里假设对于 lst[0];相加后为： lst[0][0]: 4; lst[0][1]:2;没有变化这种情况</span><span class="token comment" spellcheck="true">//因为相加的时候是 以lst[0][0], lst[1][0]为基准，所以这里向下相加后，就要反转一下</span>        <span class="token function">ReservedLst</span><span class="token punctuation">(</span>lst<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//重新赋值</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> lst<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//注意这里是 lst[j][i] 赋值给 m_nArray[i][j]</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//检测变动</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> tempArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> true<span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token function">GetDlgItem</span><span class="token punctuation">(</span>IDC_BUTTON4<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">EnableWindow</span><span class="token punctuation">(</span>FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> false<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">return</span> TRUE<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="5-游戏结束函数"><a href="#5-游戏结束函数" class="headerlink" title="5.游戏结束函数"></a>5.游戏结束函数</h3><pre class=" language-c"><code class="language-c">bool CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">CalcEnd</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>wop<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//首先处理横轴：</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> false<span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">==</span> Count<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断是否可以累加</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> false<span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//处理纵轴</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> false<span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">==</span> Count<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> m_nArray<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> false<span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> true<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">return</span> false<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="6-累加函数"><a href="#6-累加函数" class="headerlink" title="6.累加函数"></a>6.累加函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">Add</span><span class="token punctuation">(</span> deque<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token operator">&amp;</span>list<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>wop<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> list<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span><span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>                    list<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果当前的值不为0  跳出内循环，没必要再比较例如：  4 2 2 ； 当 list[0]=4,list[1]=2list[1] = 2 != 0,直接跳出循环，没必要再比较 list[2]与 list[0]</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//重新排列顺序，不足补0；</span>        <span class="token comment" spellcheck="true">//例如 4 2  经过上面的代码其实没有任何变化累加，但是累加最后的结果要变为  4 2 0 0  </span>        deque<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> tempLst<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//双端队列支持对元素的下标访问</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                tempLst<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        list <span class="token operator">=</span> tempLst<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这个时候 list的元素为： 4 2 ，所以下面要补0</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            list<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//list 的元素为： 4 2 0 0 </span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="7-向上按钮响应函数"><a href="#7-向上按钮响应函数" class="headerlink" title="7.向上按钮响应函数"></a>7.向上按钮响应函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">OnBnClickedButton2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// TODO: 在此添加控件通知处理程序代码</span>    <span class="token comment" spellcheck="true">//sign = 1;</span>    CString str<span class="token punctuation">;</span>    bool bRet<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>wop<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        List1<span class="token punctuation">.</span><span class="token function">AddString</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"↑"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        CString strr<span class="token punctuation">;</span>        strr <span class="token operator">=</span> <span class="token function">TravelArrey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">WriteTXT</span><span class="token punctuation">(</span>strr<span class="token punctuation">)</span><span class="token punctuation">;</span>        bRet <span class="token operator">=</span> <span class="token function">Up</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">TOPControl</span><span class="token punctuation">(</span>bRet<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="8-TOPControl函数"><a href="#8-TOPControl函数" class="headerlink" title="8.TOPControl函数"></a>8.TOPControl函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">TOPControl</span><span class="token punctuation">(</span>bool n<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">CalcEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断游戏是否结束</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">AfxMessageBox</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"GameOver!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>List1<span class="token punctuation">.</span><span class="token function">AddString</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"GameOver!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//List1.AddString(_T("GameOver!"));</span>        <span class="token keyword">int</span> buff<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//遍历找出最大值并输出</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> max<span class="token punctuation">)</span>                    max <span class="token operator">=</span> buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        CString st<span class="token punctuation">;</span>        st<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"m_%d\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">WriteNameTXT</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记录游戏信息</span>        CString strrr<span class="token punctuation">;</span>        strrr<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"O_%s\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Userr<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">WriteTXT</span><span class="token punctuation">(</span>strrr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">Reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//重置游戏</span>        <span class="token function">TOPList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//排行榜函数</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">RandonNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Invalidate</span><span class="token punctuation">(</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">CalcEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token function">AfxMessageBox</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"GameOver!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>List1<span class="token punctuation">.</span><span class="token function">AddString</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"GameOver!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> buff<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//遍历找出最大值并输出</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> max<span class="token punctuation">)</span>                            max <span class="token operator">=</span> buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                CString st<span class="token punctuation">;</span>                st<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"m_%d\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">WriteNameTXT</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">;</span>                CString strrr<span class="token punctuation">;</span>                strrr<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"O_%s\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Userr<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">WriteTXT</span><span class="token punctuation">(</span>strrr<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">Reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">TOPList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token function">Invalidate</span><span class="token punctuation">(</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="9-定时器相关函数"><a href="#9-定时器相关函数" class="headerlink" title="9.定时器相关函数"></a>9.定时器相关函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">OnTimer</span><span class="token punctuation">(</span>UINT_PTR nIDEvent<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>nIDEvent<span class="token operator">==</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>wop<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断事件来自哪个定时器</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// TODO: 在此添加消息处理程序代码和/或调用默认值</span>        <span class="token comment" spellcheck="true">//sign2 = 0;</span>        CString str<span class="token punctuation">,</span> str1<span class="token punctuation">,</span> str2<span class="token punctuation">,</span> str3<span class="token punctuation">;</span>        <span class="token keyword">int</span> Minute<span class="token punctuation">,</span> Second<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//分，秒</span>        Minute <span class="token operator">=</span> ct <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//分</span>        Second <span class="token operator">=</span> ct <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//秒</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Second <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            Second <span class="token operator">=</span> <span class="token number">59</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>Minute <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>                Minute <span class="token operator">=</span> Minute <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            Second <span class="token operator">=</span> Second <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//自减1倒计时</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Second <span class="token operator">>=</span> <span class="token number">10</span><span class="token punctuation">)</span>            str2<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"%d:%d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Minute<span class="token punctuation">,</span> Second<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            str2<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"%d:0%d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Minute<span class="token punctuation">,</span> Second<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//str2.Format(_T("%d"), Second);</span>        <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT2<span class="token punctuation">,</span> str2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Minute <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> Second <span class="token operator">==</span> <span class="token number">0</span><span class="token operator">&amp;&amp;</span>sign2<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            sign2<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//AfxMessageBox(_T("GameOver!"));</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">MessageBox</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"Game Over!"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"时间到"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                sign2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                List1<span class="token punctuation">.</span><span class="token function">AddString</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"GameOver!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token keyword">int</span> buff<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//遍历找出最大值并输出</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> max<span class="token punctuation">)</span>                            max <span class="token operator">=</span> buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                CString st<span class="token punctuation">;</span>                st<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"m_%d\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">WriteNameTXT</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">Invalidate</span><span class="token punctuation">(</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>                CString strrr<span class="token punctuation">;</span>                strrr<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"O_%s\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Userr<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">WriteTXT</span><span class="token punctuation">(</span>strrr<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">Reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//此处修改只显示一次</span>                                <span class="token function">TOPList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Minute <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> Second <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> sign2 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            sign2<span class="token operator">++</span><span class="token punctuation">;</span>            ct <span class="token operator">=</span> COUNT<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        ct <span class="token operator">=</span> ct <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        CTime tm <span class="token operator">=</span> CTime<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">GetCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        str3<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"%d-%02d-%02d  %02d:%02d:%02d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">.</span><span class="token function">GetYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">.</span><span class="token function">GetMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">.</span><span class="token function">GetDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">.</span><span class="token function">GetHour</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">.</span><span class="token function">GetMinute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">.</span><span class="token function">GetSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">GetDlgItem</span><span class="token punctuation">(</span>IDC_EDIT1<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">EnableWindow</span><span class="token punctuation">(</span>FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">GetDlgItem</span><span class="token punctuation">(</span>IDC_EDIT1<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">SetWindowText</span><span class="token punctuation">(</span>str3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nIDEvent <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        CString str<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>sign <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span> sign <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> sign<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>sign<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//选择要显示的名人名言</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word1<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word2<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word3<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word4<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word5<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">6</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word6<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">7</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word7<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">8</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word8<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">9</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word9<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">10</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word10<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    CDialogEx<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">OnTimer</span><span class="token punctuation">(</span>nIDEvent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="10-排行榜函数"><a href="#10-排行榜函数" class="headerlink" title="10.排行榜函数"></a>10.排行榜函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">TOPList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    CString cstrFileFullPath <span class="token operator">=</span> <span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\11817\\Desktop\\计算机大实验\\2048demo\\name.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    USES_CONVERSION<span class="token punctuation">;</span>    CStdioFile cssFile<span class="token punctuation">;</span>    CString cstrLine<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//usr *u = new usr;</span>    u<span class="token punctuation">.</span><span class="token function">RemoveAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> z<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    BOOL ret <span class="token operator">=</span> cssFile<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>cstrFileFullPath<span class="token punctuation">,</span>        CFile<span class="token punctuation">:</span><span class="token punctuation">:</span>modeRead <span class="token operator">|</span> CFile<span class="token punctuation">:</span><span class="token punctuation">:</span>shareDenyNone<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ret<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">AfxMessageBox</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"读取文件失败"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    cssFile<span class="token punctuation">.</span><span class="token function">SeekToBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>cssFile<span class="token punctuation">.</span><span class="token function">ReadString</span><span class="token punctuation">(</span>cstrLine<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//z++;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cstrLine<span class="token operator">==</span><span class="token string">"u_"</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cstrLine <span class="token operator">!=</span> <span class="token string">"u_"</span> <span class="token operator">&amp;&amp;</span> cstrLine<span class="token punctuation">.</span><span class="token function">GetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">'u'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//查找用户名关键字</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            usr temp<span class="token punctuation">;</span>            <span class="token keyword">int</span> l<span class="token operator">=</span>cstrLine<span class="token punctuation">.</span><span class="token function">GetLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            CString ste<span class="token operator">=</span> cstrLine<span class="token punctuation">.</span><span class="token function">Right</span><span class="token punctuation">(</span>l<span class="token number">-2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//ste.Format(_T("%s"),)</span>            temp<span class="token punctuation">.</span>name <span class="token operator">=</span> ste<span class="token punctuation">;</span>            temp<span class="token punctuation">.</span>order <span class="token operator">=</span> z<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>            u<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//u = new usr;</span>            <span class="token comment" spellcheck="true">//u[z].name = cstrLine;</span>            z<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//countt++;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cstrLine <span class="token operator">!=</span> <span class="token string">"u_"</span> <span class="token operator">&amp;&amp;</span>cstrLine<span class="token punctuation">.</span><span class="token function">GetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'m'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//查找成绩关键字</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> i<span class="token punctuation">,</span>k<span class="token punctuation">,</span>l<span class="token punctuation">;</span>            <span class="token keyword">char</span> s<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>            l <span class="token operator">=</span> cstrLine<span class="token punctuation">.</span><span class="token function">GetLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>l<span class="token number">-2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">char</span> y<span class="token punctuation">;</span>                 y<span class="token operator">=</span> cstrLine<span class="token punctuation">.</span><span class="token function">GetAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> y<span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//s.Add( '\0');             </span>            k <span class="token operator">=</span> <span class="token function">atoi</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>            u<span class="token punctuation">[</span>z<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>MAX <span class="token operator">=</span> k<span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    usr max<span class="token punctuation">;</span>    <span class="token keyword">int</span> tempmax <span class="token operator">=</span> z <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//交换排序</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span>z<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> z<span class="token number">-1</span><span class="token punctuation">;</span> j <span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>MAX <span class="token operator">&lt;=</span> u<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>MAX<span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                max <span class="token operator">=</span> u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                u<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> u<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                u<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> max<span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    List2<span class="token punctuation">.</span><span class="token function">ResetContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    TOPu<span class="token punctuation">.</span><span class="token function">RemoveAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清空排序记录</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>v<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>z<span class="token number">-1</span><span class="token operator">&amp;&amp;</span>v<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span>i<span class="token operator">++</span> <span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        CString str<span class="token punctuation">,</span>str2<span class="token punctuation">;</span>        str2<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"|分数："</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>MAX <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            usr temp<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                str<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"第%d名：%-8s%s%-4d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> str2<span class="token punctuation">,</span> u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>MAX<span class="token punctuation">)</span><span class="token punctuation">;</span>                List2<span class="token punctuation">.</span><span class="token function">AddString</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出至列表</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            temp <span class="token operator">=</span> u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            TOPu<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>            v<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="11-回放函数"><a href="#11-回放函数" class="headerlink" title="11.回放函数"></a>11.回放函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> s<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//TOPu[x];</span>    CPaintDC <span class="token function">dc</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    CString cstrFileFullPath <span class="token operator">=</span> <span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\11817\\Desktop\\计算机大实验\\2048demo\\data.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    USES_CONVERSION<span class="token punctuation">;</span>    CStdioFile cssFile<span class="token punctuation">;</span>    CString cstrLine<span class="token punctuation">;</span>    BOOL ret <span class="token operator">=</span> cssFile<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>cstrFileFullPath<span class="token punctuation">,</span>        CFile<span class="token punctuation">:</span><span class="token punctuation">:</span>modeRead <span class="token operator">|</span> CFile<span class="token punctuation">:</span><span class="token punctuation">:</span>shareDenyNone<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ret<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">AfxMessageBox</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"读取文件失败"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    cssFile<span class="token punctuation">.</span><span class="token function">SeekToBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>cssFile<span class="token punctuation">.</span><span class="token function">ReadString</span><span class="token punctuation">(</span>cstrLine<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> u<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cstrLine<span class="token punctuation">.</span><span class="token function">GetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'L'</span><span class="token punctuation">)</span>            y<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">==</span> TOPu<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span>order<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            u <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/*CString stt;            stt.Format(_T("%s"), TOPu[x].name);            SetDlgItemText(IDC_EDIT4, stt);*/</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>cssFile<span class="token punctuation">.</span><span class="token function">ReadString</span><span class="token punctuation">(</span>cstrLine<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> cstrLine<span class="token punctuation">.</span><span class="token function">GetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">'O'</span><span class="token operator">&amp;&amp;</span>cstrLine<span class="token punctuation">.</span><span class="token function">GetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">'L'</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> h <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> h<span class="token operator">++</span><span class="token punctuation">)</span>                        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                            CString temp<span class="token punctuation">;</span> <span class="token keyword">char</span> <span class="token operator">*</span>temps<span class="token punctuation">;</span>                            temp <span class="token operator">=</span> cstrLine<span class="token punctuation">.</span><span class="token function">Mid</span><span class="token punctuation">(</span><span class="token number">25</span> <span class="token operator">*</span> j <span class="token operator">+</span> <span class="token number">5</span> <span class="token operator">*</span> h<span class="token punctuation">,</span> <span class="token number">25</span> <span class="token operator">*</span> j <span class="token operator">+</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>h <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            temps <span class="token operator">=</span> <span class="token function">W2A</span><span class="token punctuation">(</span>temp<span class="token punctuation">.</span><span class="token function">GetBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">int</span> m<span class="token operator">=</span><span class="token function">atoi</span><span class="token punctuation">(</span>temps<span class="token punctuation">)</span><span class="token punctuation">;</span>                            n_nArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>h<span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">;</span>                        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                    <span class="token function">Invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">XSleep</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//延时300ms</span>                    <span class="token comment" spellcheck="true">//List1.AddString(_T("*"));</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">else</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    wop <span class="token operator">=</span> TRUE<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MFC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2048 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2048Start</title>
      <link href="2021/04/07/2048start/"/>
      <url>2021/04/07/2048start/</url>
      
        <content type="html"><![CDATA[<h1 id="2048游戏"><a href="#2048游戏" class="headerlink" title="2048游戏"></a>2048游戏</h1><h2 id="设计目标"><a href="#设计目标" class="headerlink" title="设计目标"></a>设计目标</h2><h3 id="基本目标："><a href="#基本目标：" class="headerlink" title="基本目标："></a>基本目标：</h3><pre class=" language-bash"><code class="language-bash">    1. 布设游戏的场景；    2. 管理游戏的玩家,包括记录并显示玩家的用户名、实时排名以及得分，游戏过程中的记录信息包括玩家操作等；            3. 按规则执行游戏过程，判定游戏胜利；    4. 记录游戏过程包括玩家操作以及每一步操作的结果，并可以通过图形界面演示重现；    5. 游戏规则：每次可以选择上下左右其中一个方向去滑动，每滑动一次，所有的数字方块都会往滑动的方向靠拢外，系统也会在空白的地方乱数出现一个数字方块，相同数字的方块在靠拢、相撞时会相加。系统给予的数字方块不是2就是4，玩家要想办法在这小小的16格范围中凑出“2048”这个数字方块；矩阵的四周有四个按钮，分别表示向左、向右、向上、向下移动。当某一方向无法移动时，该按钮应该被隐藏（变灰）。</code></pre><h3 id="拓展目标："><a href="#拓展目标：" class="headerlink" title="拓展目标："></a>拓展目标：</h3><pre class=" language-bash"><code class="language-bash">    1. 限定游戏时间：在游戏界面添加倒计时，并设计倒计时程序。当计时到时游戏结束并重置界面；    2. 添加背景音乐；    3. 增加滚动字幕，字幕内容为为一些名人名言，提升游戏过程中的趣味性；    4. 在演示玩家操作时，用户可选择演示播放速度，以满足用户的不同需求；    5. 实现数据可迁移，方便用户在不同PC设备上使用；    6. 添加用户登录界面，方便对玩家的管理；    7. 在游戏界面添加时间日期显示，显示当前的日期和时间；    8. 添加键盘控制功能，玩家可以通过键盘控制界面上下左右操作。</code></pre><h2 id="相关知识情况"><a href="#相关知识情况" class="headerlink" title="相关知识情况"></a>相关知识情况</h2><h3 id="所预见的技术"><a href="#所预见的技术" class="headerlink" title="所预见的技术"></a>所预见的技术</h3><pre class=" language-bash"><code class="language-bash">    1. 对话框/SDI程序架构的生成；    2. 绘制不同颜色和线形的曲线；    3. 配置界面字体大小、颜色、类型；    4. 对话框添加控件资源并配置其大小、颜色、背景、字体等等；    5. 定时器配置（消息映射）；    6. 各种控件的操作函数；    7. 文件读写操作；    8. MFC标准类的基本使用方法；    9. 排序及查找算法。</code></pre><h3 id="所掌握的技术"><a href="#所掌握的技术" class="headerlink" title="所掌握的技术"></a>所掌握的技术</h3><pre class=" language-bash"><code class="language-bash">    1. 对话框添加控件资源并配置其大小、颜色、背景、字体等等；    2. 文件读写操作；    3. 排序及查找算法</code></pre><h3 id="需要后续获取的技术"><a href="#需要后续获取的技术" class="headerlink" title="需要后续获取的技术"></a>需要后续获取的技术</h3><pre class=" language-bash"><code class="language-bash">    1. 对话框/SDI程序架构的生成；    2. 绘制不同颜色和线形的曲线；    3. 配置界面字体大小、颜色、类型；    4. 定时器配置（消息映射）；    5. 各种控件的操作函数；    6. MFC标准类的基本使用方法。</code></pre><h2 id="进度计划"><a href="#进度计划" class="headerlink" title="进度计划"></a>进度计划</h2><pre class=" language-bash"><code class="language-bash">    第1天    需求分析            第2天    总体方案设计            第3-5天    关键组件、模块的使用与设计            第6-8天    模块连接与调试            第9-10天    答辩汇报，整理报告</code></pre><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] 侯俊杰. 深入浅出MFC[M]. 武汉:华中科技大学出版社, 2001.</p><p>[2] 郑阿奇,丁有和. Visual C++教程[M]. 北京:清华大学出版社, 2016.</p><p>[3] 陈国建. Visual C++宝典[M].北京:电子工业出版社, 2011.</p><p>[4] 张力. Visual C++ 高级编程[M].北京:人民邮电出版社, 2002.</p><p>[5] 王洪涛. 深入剖析Visual C++编程技术及应用实例[M].北京:人民邮电出版社, 2003.</p><p>[6] Jeff Prosise. MFC Windows程序设计（第2版）[M].北京:清华大学出版社，2000.</p><p>[7] Stephen Prata. C++ Primer Plus 第6版[M].北京:人民邮电出版社.2020.</p><p>[8] 谭浩强. C++面向对象程序设计（第2版）[M].北京:清华大学出版社.2014.</p><p>[9] )萨尼. 数据结构、算法与应用 C++语言描述（原书第2版）[M].北京:机械工业出版社.2015.</p><p>[10] Mark Allen Weiss .数据结构与算法分析——C++语言描述（第四版）[M].北京:电子工业出版社.2016.</p><p>[11] Jay Wengrow .数据结构与算法图解[M].北京:人民邮电出版社.2019.</p>]]></content>
      
      
      <categories>
          
          <category> MFC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2048 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>testBlog</title>
      <link href="2021/04/07/testblog/"/>
      <url>2021/04/07/testblog/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> testBlog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/04/06/hello-world/"/>
      <url>2021/04/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
