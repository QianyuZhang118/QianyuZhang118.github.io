<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>traffic_vhdl</title>
      <link href="2021/04/08/traffic-vhdl/"/>
      <url>2021/04/08/traffic-vhdl/</url>
      
        <content type="html"><![CDATA[<h1 id="VHDL交通灯控制"><a href="#VHDL交通灯控制" class="headerlink" title="VHDL交通灯控制"></a>VHDL交通灯控制</h1><h2 id="一、项目目的"><a href="#一、项目目的" class="headerlink" title="一、项目目的"></a>一、项目目的</h2><p>设计十字路口交通灯控制电路。通过本次实验，要求能够将已有的实体文件<br>转换为图形符号，并通过图形输入方式实现电路的连接并设定图形电路层的接口；<br>深入理解结构描述方法和图形输入法的关系。</p><h2 id="二、需准备条件"><a href="#二、需准备条件" class="headerlink" title="二、需准备条件"></a>二、需准备条件</h2><p>（1） Windows7 或更高版本的操作系统的 PC 机； </p><p>（2）安装 QuartusII9.0 EDA 软件；</p><p>（3）Cyclone 系列 EP1C3T144 开发板。</p><h2 id="三、项目原理"><a href="#三、项目原理" class="headerlink" title="三、项目原理"></a>三、项目原理</h2><p>通过 VHDL 编程，实现交通灯控制电路“TrafficLight”。 </p><p>（1）端口要求： </p><p> clk：50MHz 时钟输入；</p><p> reset：异步复位信号，低电平有效；</p><p> led_h[2..0]：h 方向的三色灯输出； </p><p> led_v[2..0]：v 方向的三色灯输出； </p><p> seg8_addr[3..0]：四位数码管的使能信号线，低电平有效；</p><p> seg8_data[7..0]：四位数码管的数据总线，低电平有效；</p><p>撰写三个独立的实体文件，分别为“Clock_1Hz.vhd”、 “TrafficControl.vhd”和“ScanDis.vhd”，并生成对应的图形符号。在图形输入界面将图形符号实例化后连接构成顶层电路图。 </p><p>（2）功能要求：<br>设十字路口为 h（东西）方向和 v（南北）方向，h 方向为主干道，绿灯时间稍长。要求整个控制周期为100秒，系统复位后h方向为绿灯(计数显示55秒)， v 方向为红灯(计数显示 60 秒)，其控制具体要求如下表所示：<br><img src="https://i.loli.net/2021/04/08/j5GVsMgWHuSAL1y.png" alt="image-20210408204808635"></p><p> TrafficControl 模块是本设计的核心模块，要求输入端包括秒脉冲和异 步复位信号；输出为两组三色灯信号和计数器值信号。注意，计数值输出为 4 位二进制数，每个方向分为个位和十位两组，所以要求在设计中将计数结果的个 位和十位分别取出。比如当前计数为 37，则需要通过数学计算分别取出数值“3” 和“7”，然后通过接口送出到显示模块 ScanDis。</p><h2 id="四、外围电路原理"><a href="#四、外围电路原理" class="headerlink" title="四、外围电路原理"></a>四、外围电路原理</h2><p>本次实验所用的外围电路包括时钟电路、独立按键电路、6 位 Led 显示电路<br>和数码管显示电路，其电路原理图和实物图如下图所示。</p><p><img src="https://i.loli.net/2021/04/08/kFMKuXvWqthP3Or.png" alt="image-20210408204955155"></p><p>图 3：时钟产生电路-50MHz</p><p><img src="https://i.loli.net/2021/04/08/DJutaLIqUOliM7F.png" alt="image-20210408205115689"></p><p>图 4：6 位 Led 显示电路</p><p><img src="https://i.loli.net/2021/04/08/jgwRLZGaUz6ohym.png" alt="image-20210408205132719"></p><p>图 5：4 位独立按键电路</p><p><img src="https://i.loli.net/2021/04/08/wkpfS8J1IEVmZ6o.png" alt="image-20210408205152472"></p><p>图 6：4 位数码管显示电路</p><p><img src="https://i.loli.net/2021/04/08/d3DwrzTcQR7jUMe.png" alt="image-20210408205206400"></p><p>图 7：硬件实物</p><p>6位Led发光发光管请选择左边3位为h方向三色灯；右边3位为v方向三色灯；数码管左边两位显示 h 方向计数值，右边两位显示 v 方向技术值；系统复位按键可任意从独立按键中选择。</p><h2 id="四、主要代码"><a href="#四、主要代码" class="headerlink" title="四、主要代码"></a>四、主要代码</h2><h3 id="1、clock-1hz"><a href="#1、clock-1hz" class="headerlink" title="1、clock_1hz"></a>1、clock_1hz</h3><pre class=" language-verilog"><code class="language-verilog">entity clock_1hz is<span class="token function">port</span><span class="token punctuation">(</span>clk<span class="token punctuation">:</span>in std_logic<span class="token punctuation">;</span>       sclk<span class="token punctuation">:</span>out std_logic<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span> entity clock_1hz<span class="token punctuation">;</span>architecture one of clock_1hz is    signal temp<span class="token punctuation">:</span>std_logic<span class="token punctuation">;</span>    signal counter<span class="token punctuation">:</span><span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">50000000</span><span class="token punctuation">:</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">begin</span>    <span class="token function">process</span><span class="token punctuation">(</span>clk<span class="token punctuation">)</span>        <span class="token keyword">begin</span>        IF <span class="token punctuation">(</span>clk'<span class="token keyword">event</span> AND clk<span class="token operator">=</span>'<span class="token number">1</span>'<span class="token punctuation">)</span> THEN            <span class="token function">if</span><span class="token punctuation">(</span>counter<span class="token operator">=</span><span class="token number">25000000</span><span class="token punctuation">)</span>then                 temp<span class="token operator">&lt;=</span><span class="token keyword">not</span> temp<span class="token punctuation">;</span>                counter<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                counter<span class="token operator">&lt;=</span>counter<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>        <span class="token keyword">end</span> process<span class="token punctuation">;</span>        sclk<span class="token operator">&lt;=</span>temp<span class="token punctuation">;</span><span class="token keyword">end</span> architecture one<span class="token punctuation">;</span></code></pre><h3 id="2、ScanDis"><a href="#2、ScanDis" class="headerlink" title="2、ScanDis"></a>2、ScanDis</h3><pre class=" language-verilog"><code class="language-verilog">entity ScanDis is <span class="token operator">--</span>将数码管扫描显示功能做成块语句<span class="token function">port</span><span class="token punctuation">(</span>clk<span class="token punctuation">:</span>in std_logic<span class="token punctuation">;</span> <span class="token operator">--</span>开发板时钟源 <span class="token number">50</span>MHzdata3<span class="token punctuation">:</span>in <span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">15</span><span class="token punctuation">;</span><span class="token operator">--</span>千位数码管接口输入信号，<span class="token number">4</span> 位二进制数data2<span class="token punctuation">:</span>in <span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">15</span><span class="token punctuation">;</span><span class="token operator">--</span>百位数码管接口输入信号，<span class="token number">4</span> 位二进制数data1<span class="token punctuation">:</span>in <span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">15</span><span class="token punctuation">;</span><span class="token operator">--</span>十位数码管接口输入信号，<span class="token number">4</span> 位二进制数data0<span class="token punctuation">:</span>in <span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">15</span><span class="token punctuation">;</span><span class="token operator">--</span>个位数码管接口输入信号，<span class="token number">4</span> 位二进制数addr<span class="token punctuation">:</span>out <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">3</span> downto <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">--</span><span class="token number">4</span> 位数码管使能信号（地址信号）seg8data<span class="token punctuation">:</span>out <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">7</span> downto <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">--</span><span class="token number">4</span> 位数码管公共数据信号<span class="token keyword">end</span> entity ScanDis<span class="token punctuation">;</span>architecture one of ScanDis is<span class="token keyword">begin</span><span class="token function">process</span><span class="token punctuation">(</span>clk<span class="token punctuation">)</span>constant MAX_DIV<span class="token punctuation">:</span><span class="token keyword">integer</span><span class="token punctuation">:</span><span class="token operator">=</span><span class="token number">25000</span><span class="token punctuation">;</span>variable counter<span class="token punctuation">:</span><span class="token keyword">integer</span> range <span class="token number">0</span> to MAX_DIV<span class="token punctuation">;</span>variable addr_counter<span class="token punctuation">:</span><span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">--</span>地址计数器variable data_temp<span class="token punctuation">:</span><span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">15</span><span class="token punctuation">;</span><span class="token keyword">begin</span><span class="token function">if</span><span class="token punctuation">(</span>clk'<span class="token keyword">event</span> <span class="token keyword">and</span> clk<span class="token operator">=</span>'<span class="token number">1</span>'<span class="token punctuation">)</span>then<span class="token function">if</span><span class="token punctuation">(</span>counter<span class="token operator">=</span>MAX_DIV<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>thencounter<span class="token punctuation">:</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>addr_counter<span class="token punctuation">:</span><span class="token operator">=</span>addr_counter<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">--</span>地址循环计数 <span class="token number">0</span>～<span class="token number">3</span><span class="token keyword">case</span> addr_counter is<span class="token operator">--</span>输出对应的地址使能信号并读取对应位置的数值到 data_tempwhen <span class="token number">0</span><span class="token operator">=></span>addr<span class="token operator">&lt;=</span><span class="token string">"0111"</span><span class="token punctuation">;</span>data_temp<span class="token punctuation">:</span><span class="token operator">=</span>data3<span class="token punctuation">;</span>when <span class="token number">1</span><span class="token operator">=></span>addr<span class="token operator">&lt;=</span><span class="token string">"1011"</span><span class="token punctuation">;</span>data_temp<span class="token punctuation">:</span><span class="token operator">=</span>data2<span class="token punctuation">;</span>when <span class="token number">2</span><span class="token operator">=></span>addr<span class="token operator">&lt;=</span><span class="token string">"1101"</span><span class="token punctuation">;</span>data_temp<span class="token punctuation">:</span><span class="token operator">=</span>data1<span class="token punctuation">;</span>when <span class="token number">3</span><span class="token operator">=></span>addr<span class="token operator">&lt;=</span><span class="token string">"1110"</span><span class="token punctuation">;</span>data_temp<span class="token punctuation">:</span><span class="token operator">=</span>data0<span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token keyword">case</span><span class="token punctuation">;</span><span class="token keyword">case</span> data_temp is<span class="token operator">--</span>根据数值选择输出数码形状信号when <span class="token number">0</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"00000011"</span><span class="token punctuation">;</span>when <span class="token number">1</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"10011111"</span><span class="token punctuation">;</span>when <span class="token number">2</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"00100101"</span><span class="token punctuation">;</span>when <span class="token number">3</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"00001101"</span><span class="token punctuation">;</span>when <span class="token number">4</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"10011001"</span><span class="token punctuation">;</span>when <span class="token number">5</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"01001001"</span><span class="token punctuation">;</span>when <span class="token number">6</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"01000001"</span><span class="token punctuation">;</span>when <span class="token number">7</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"00011111"</span><span class="token punctuation">;</span>when <span class="token number">8</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"00000001"</span><span class="token punctuation">;</span>when <span class="token number">9</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"00001001"</span><span class="token punctuation">;</span>when <span class="token number">10</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"11111101"</span><span class="token punctuation">;</span>when <span class="token number">11</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"11111111"</span><span class="token punctuation">;</span>when <span class="token number">12</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"11111111"</span><span class="token punctuation">;</span>when <span class="token number">13</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"11111111"</span><span class="token punctuation">;</span>when <span class="token number">14</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"11111111"</span><span class="token punctuation">;</span>when <span class="token number">15</span><span class="token operator">=></span>seg8data<span class="token operator">&lt;=</span><span class="token string">"11111111"</span><span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token keyword">case</span><span class="token punctuation">;</span><span class="token keyword">else</span>counter<span class="token punctuation">:</span><span class="token operator">=</span>counter<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span><span class="token keyword">end</span> process<span class="token punctuation">;</span><span class="token keyword">end</span> architecture one<span class="token punctuation">;</span></code></pre><h3 id="3、TrafficControl"><a href="#3、TrafficControl" class="headerlink" title="3、TrafficControl"></a>3、TrafficControl</h3><p>此处注意a1_2, a2_3, a3_4, a4_1为四个标志位，上升沿时表示状态切换，四个标志位代表四个切换节点。</p><pre class=" language-verilog"><code class="language-verilog">entity TrafficControl is<span class="token function">port</span><span class="token punctuation">(</span>clk_1s<span class="token punctuation">:</span>in std_logic<span class="token punctuation">;</span>      areset<span class="token punctuation">:</span>in std_logic<span class="token punctuation">;</span><span class="token operator">--</span>此为复位信号     light_h<span class="token punctuation">:</span>out <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">2</span> downto <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     light_v<span class="token punctuation">:</span>out <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">2</span> downto <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> count_h_ten<span class="token punctuation">:</span>out <span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">15</span><span class="token punctuation">;</span> count_h_one<span class="token punctuation">:</span>out <span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">15</span><span class="token punctuation">;</span> count_v_ten<span class="token punctuation">:</span>out <span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">15</span><span class="token punctuation">;</span> count_v_one<span class="token punctuation">:</span>out <span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span> entity TrafficControl<span class="token punctuation">;</span>architecture one of TrafficControl is    signal counter_h<span class="token punctuation">:</span><span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">100</span><span class="token punctuation">;</span>    signal counter_v<span class="token punctuation">:</span><span class="token keyword">integer</span> range <span class="token number">0</span> to <span class="token number">100</span><span class="token punctuation">;</span>    signal a1_2<span class="token punctuation">,</span>a2_3<span class="token punctuation">,</span>a3_4<span class="token punctuation">,</span>a4_1<span class="token punctuation">:</span>std_logic<span class="token punctuation">:</span><span class="token operator">=</span>'<span class="token number">0</span>'<span class="token punctuation">;</span><span class="token keyword">begin</span>    <span class="token function">process</span><span class="token punctuation">(</span>clk_1s<span class="token punctuation">)</span>    <span class="token keyword">begin</span>    <span class="token function">if</span><span class="token punctuation">(</span>clk_1s'<span class="token keyword">event</span> <span class="token keyword">and</span> clk_1s<span class="token operator">=</span>'<span class="token number">1</span>'<span class="token punctuation">)</span>then        count_h_ten<span class="token operator">&lt;=</span>counter_h<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">;</span>        count_h_one<span class="token operator">&lt;=</span>counter_h rem <span class="token number">10</span><span class="token punctuation">;</span>        count_v_ten<span class="token operator">&lt;=</span>counter_v<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">;</span>        count_v_one<span class="token operator">&lt;=</span>counter_v rem <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> process<span class="token punctuation">;</span>    <span class="token function">process</span><span class="token punctuation">(</span>clk_1s<span class="token punctuation">,</span>areset<span class="token punctuation">)</span>    <span class="token keyword">begin</span>    <span class="token function">if</span><span class="token punctuation">(</span>areset<span class="token operator">=</span>'<span class="token number">0</span>'<span class="token punctuation">)</span>then        a4_1<span class="token operator">&lt;=</span>'<span class="token number">1</span>'<span class="token punctuation">;</span>counter_h<span class="token operator">&lt;=</span><span class="token number">55</span><span class="token punctuation">;</span>counter_v<span class="token operator">&lt;=</span><span class="token number">60</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token function">if</span><span class="token punctuation">(</span>clk_1s'<span class="token keyword">event</span> <span class="token keyword">and</span> clk_1s<span class="token operator">=</span>'<span class="token number">1</span>'<span class="token punctuation">)</span>then            <span class="token function">if</span><span class="token punctuation">(</span>a4_1<span class="token operator">=</span>'<span class="token number">1</span>'<span class="token punctuation">)</span>then                counter_v<span class="token operator">&lt;=</span>counter_v<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token function">if</span><span class="token punctuation">(</span>counter_h<span class="token operator">>=</span><span class="token number">1</span><span class="token punctuation">)</span>then                    counter_h<span class="token operator">&lt;=</span>counter_h<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token function">elsif</span><span class="token punctuation">(</span>counter_h<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span>then                    a4_1<span class="token operator">&lt;=</span>'<span class="token number">0</span>'<span class="token punctuation">;</span>a1_2<span class="token operator">&lt;=</span>'<span class="token number">1</span>'<span class="token punctuation">;</span>                    counter_h<span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">;</span>                <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>                <span class="token function">elsif</span><span class="token punctuation">(</span>a1_2<span class="token operator">=</span>'<span class="token number">1</span>'<span class="token punctuation">)</span>then                counter_v<span class="token operator">&lt;=</span>counter_v<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token function">if</span><span class="token punctuation">(</span>counter_h<span class="token operator">>=</span><span class="token number">1</span><span class="token punctuation">)</span>then                    counter_h<span class="token operator">&lt;=</span>counter_h<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token function">elsif</span><span class="token punctuation">(</span>counter_h<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span>then                    a1_2<span class="token operator">&lt;=</span>'<span class="token number">0</span>'<span class="token punctuation">;</span>a2_3<span class="token operator">&lt;=</span>'<span class="token number">1</span>'<span class="token punctuation">;</span>                    counter_h<span class="token operator">&lt;=</span><span class="token number">40</span><span class="token punctuation">;</span>                    counter_v<span class="token operator">&lt;=</span><span class="token number">35</span><span class="token punctuation">;</span>                <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>            <span class="token function">elsif</span><span class="token punctuation">(</span>a2_3<span class="token operator">=</span>'<span class="token number">1</span>'<span class="token punctuation">)</span>then                counter_v<span class="token operator">&lt;=</span>counter_v<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token function">if</span><span class="token punctuation">(</span>counter_h<span class="token operator">>=</span><span class="token number">6</span><span class="token punctuation">)</span>then                    counter_h<span class="token operator">&lt;=</span>counter_h<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token function">elsif</span><span class="token punctuation">(</span>counter_h<span class="token operator">&lt;</span><span class="token number">6</span><span class="token punctuation">)</span>then                    a2_3<span class="token operator">&lt;=</span>'<span class="token number">0</span>'<span class="token punctuation">;</span>a3_4<span class="token operator">&lt;=</span>'<span class="token number">1</span>'<span class="token punctuation">;</span>                    counter_v<span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">;</span>                <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>            <span class="token function">elsif</span><span class="token punctuation">(</span>a3_4<span class="token operator">=</span>'<span class="token number">1</span>'<span class="token punctuation">)</span>then                counter_v<span class="token operator">&lt;=</span>counter_v<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token function">if</span><span class="token punctuation">(</span>counter_h<span class="token operator">>=</span><span class="token number">1</span><span class="token punctuation">)</span>then                    counter_h<span class="token operator">&lt;=</span>counter_h<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token function">elsif</span><span class="token punctuation">(</span>counter_h<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span>then                    a3_4<span class="token operator">&lt;=</span>'<span class="token number">0</span>'<span class="token punctuation">;</span>a4_1<span class="token operator">&lt;=</span>'<span class="token number">1</span>'<span class="token punctuation">;</span>                    counter_h<span class="token operator">&lt;=</span><span class="token number">55</span><span class="token punctuation">;</span>                    counter_v<span class="token operator">&lt;=</span><span class="token number">60</span><span class="token punctuation">;</span>                <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                counter_h<span class="token operator">&lt;=</span><span class="token number">88</span><span class="token punctuation">;</span>                counter_v<span class="token operator">&lt;=</span><span class="token number">88</span><span class="token punctuation">;</span>            <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> process<span class="token punctuation">;</span>    <span class="token function">process</span><span class="token punctuation">(</span>clk_1s<span class="token punctuation">)</span>    <span class="token keyword">begin</span>    <span class="token function">if</span><span class="token punctuation">(</span>a1_2<span class="token operator">=</span>'<span class="token number">1</span>'<span class="token punctuation">)</span>then        light_h<span class="token operator">&lt;=</span><span class="token string">"101"</span><span class="token punctuation">;</span>light_v<span class="token operator">&lt;=</span><span class="token string">"011"</span><span class="token punctuation">;</span>    <span class="token function">elsif</span><span class="token punctuation">(</span>a2_3<span class="token operator">=</span>'<span class="token number">1</span>'<span class="token punctuation">)</span>then        light_h<span class="token operator">&lt;=</span><span class="token string">"011"</span><span class="token punctuation">;</span>light_v<span class="token operator">&lt;=</span><span class="token string">"110"</span><span class="token punctuation">;</span>    <span class="token function">elsif</span><span class="token punctuation">(</span>a3_4<span class="token operator">=</span>'<span class="token number">1</span>'<span class="token punctuation">)</span>then        light_h<span class="token operator">&lt;=</span><span class="token string">"011"</span><span class="token punctuation">;</span>light_v<span class="token operator">&lt;=</span><span class="token string">"101"</span><span class="token punctuation">;</span>    <span class="token function">elsif</span><span class="token punctuation">(</span>a4_1<span class="token operator">=</span>'<span class="token number">1</span>'<span class="token punctuation">)</span>then        light_h<span class="token operator">&lt;=</span><span class="token string">"110"</span><span class="token punctuation">;</span>light_v<span class="token operator">&lt;=</span><span class="token string">"011"</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> process<span class="token punctuation">;</span><span class="token keyword">end</span> architecture<span class="token punctuation">;</span></code></pre><h2 id="五、模块信号端口连接示意"><a href="#五、模块信号端口连接示意" class="headerlink" title="五、模块信号端口连接示意"></a>五、模块信号端口连接示意</h2><p><img src="https://i.loli.net/2021/04/08/Gh61fOpSsu7WC4P.png" alt="image-20210408210352756"></p><h2 id="六、运行结果"><a href="#六、运行结果" class="headerlink" title="六、运行结果"></a>六、运行结果</h2><p><img src="https://i.loli.net/2021/04/08/HyTbQX3B5MDYzaL.png" alt="image-20210408210721775"></p><p>h方向绿灯通行，剩余46秒；v方向红灯禁行，剩余51秒</p><p><img src="https://i.loli.net/2021/04/08/uWLgxw4UMhteEkV.png" alt="image-20210408210647982"></p><p>h方向绿灯通行，剩余35秒；v方向红灯禁行，剩余40秒</p><h2 id="七、提示"><a href="#七、提示" class="headerlink" title="七、提示"></a>七、提示</h2><p>本文仅供学习交流，本项目有助于FPGA入门。FPGA具有开发周期短、灵活性强的优势。近些年来应用领域已由通信逐渐拓展至各行各业（就业前景一片光明_~_）。因此，强烈不推荐直接将源代码粘贴复制，甚至直接将文中图片下载交差了事。</p>]]></content>
      
      
      <categories>
          
          <category> VHDL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> traffic_light </tag>
            
            <tag> VHDL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>痛定思痛-2020机器人反思</title>
      <link href="2021/04/08/reflection/"/>
      <url>2021/04/08/reflection/</url>
      
        <content type="html"><![CDATA[<h1 id="赛后总结"><a href="#赛后总结" class="headerlink" title="赛后总结"></a><strong>赛后总结</strong></h1><h3 id="1、分清主次，切勿因小失大。"><a href="#1、分清主次，切勿因小失大。" class="headerlink" title="1、分清主次，切勿因小失大。"></a>1、分清主次，切勿因小失大。</h3><p>作为舞蹈机器人，舞蹈是最重要、最基础的部分。没有舞蹈其它功能都是空谈。因此在设计执行流程和方案时，无论如何要把舞蹈放在首位。不论出现任何问题，都要确保舞蹈能够正常完成。今年在整体设计中，人机环节被设计成为舞蹈的触发条件。赛后经过认真反思，发现这样设计存在严重缺陷，同时也是本次比赛失利的重要原因之一。因为人机互动存在不确定性，一旦人机互动没有按照既定流程执行，那么舞蹈环节便无法开始，进而导致占据优势的踩圈环节无法进行，极易造成因小失大。</p><h3 id="2、充分考虑所有可能的突发情况，并准备应对措施。"><a href="#2、充分考虑所有可能的突发情况，并准备应对措施。" class="headerlink" title="2、充分考虑所有可能的突发情况，并准备应对措施。"></a>2、充分考虑所有可能的突发情况，并准备应对措施。</h3><p>导致本次比赛失利的直接原因，是树莓派与32单片机之间的通信出现问题。虽然这种情况在之前的调试中从未遇到，但赛场上任何意外情况都有可能发生。作为队长，我应当尽可能地想到所有可能的情况并指定行之有效的应对方案。这样才能在意外发生时从容应对。而因为此次比赛的意外情况并没有对应的方案，加之比赛过程中比较紧张，导致乱了阵脚，做出了一些错误判断，这同样也是深刻的教训。</p><h3 id="3、不吝啬于调试，大量调试才可能发现问题。"><a href="#3、不吝啬于调试，大量调试才可能发现问题。" class="headerlink" title="3、不吝啬于调试，大量调试才可能发现问题。"></a>3、不吝啬于调试，大量调试才可能发现问题。</h3><p>本次比赛中之所以没有很好地应对发生的意外，还有一个重要原因是调试次数的不足。只有在大量调试中才能发现尽可能多的潜在问题，并针对其指定方案或者对机器人进行修改完善。有可能前一百次调试没有出现的问题，第一百零一次就出现了。</p><h3 id="4、充分与他人沟通，特别是自己了解不够的部分。"><a href="#4、充分与他人沟通，特别是自己了解不够的部分。" class="headerlink" title="4、充分与他人沟通，特别是自己了解不够的部分。"></a>4、充分与他人沟通，特别是自己了解不够的部分。</h3><p>本次比赛中，问题出在树莓派与32单片机的通信。但经过赛后反思，如果当时采取正确适当的操作，意外是完全可以被化解的。之所以没有正确处理，其中一个重要原因是我对树莓派内所执行程序缺乏认识，了解还不够。如果能够对其内部的执行顺序和机制掌握更多一些，如果能够与负责树莓派的同学沟通更多一些，那么赛场上处理问题的思路也就会更加清晰一些。</p><h3 id="5、保管好本队伍的物品，以免遗失造成麻烦。"><a href="#5、保管好本队伍的物品，以免遗失造成麻烦。" class="headerlink" title="5、保管好本队伍的物品，以免遗失造成麻烦。"></a>5、保管好本队伍的物品，以免遗失造成麻烦。</h3><p>本次比赛中，语音识别作为一个可选项目，完成会有一定加分。而当我们准备添加这一功能时，发现我们队的语音模块已经不见了踪影，这给我们的进度带来了不小的阻碍，也在一定程度上影响了我们的心态。因此，在准备过程中以及比赛过程中，保管好本队伍的物品也是一项不得不引起重视的工作。</p><h3 id="6、切忌想当然与过度自信，善于听取他人意见。"><a href="#6、切忌想当然与过度自信，善于听取他人意见。" class="headerlink" title="6、切忌想当然与过度自信，善于听取他人意见。"></a>6、切忌想当然与过度自信，善于听取他人意见。</h3><p>赛前有同学提醒我加一个实体按键，控制舞蹈环节的开始，以免人机交互出现问题导致舞蹈无法进行。但当时我认为人机交互在调试过程中几乎没有出现过问题，多加一个按键是画蛇添足，且会影响机器人的整体观感，所以没有采纳。但实际上，实体按键是一种有效的降低风险的方法。</p><h3 id="7、将规则作为最重要的资料，充分阅读理解，保证不遗漏每一条信息。"><a href="#7、将规则作为最重要的资料，充分阅读理解，保证不遗漏每一条信息。" class="headerlink" title="7、将规则作为最重要的资料，充分阅读理解，保证不遗漏每一条信息。"></a>7、将规则作为最重要的资料，充分阅读理解，保证不遗漏每一条信息。</h3><p>规则作为一场比赛的核心与纲领，是每个参赛队员要认真仔细反复研读的文件。而本次比赛中由于我对规则研究不够，所以导致“语音识别环节完成加5分”这条重要信息被遗漏。最后匆匆忙忙添加语音识别功能也已是为时已晚。</p><h3 id="8、尽可能实现闭环控制，如收发协议等。"><a href="#8、尽可能实现闭环控制，如收发协议等。" class="headerlink" title="8、尽可能实现闭环控制，如收发协议等。"></a>8、尽可能实现闭环控制，如收发协议等。</h3><p>作为控制专业的学生，在设计项目或者执行逻辑时因尽可能采取闭环控制方式，最少也应该加入反馈环节。而在本次比赛中出现问题的通信环节，执行程序中只有单向的发送与接收。树莓派不知道接收方是否收到，32单片机不知道发送方是否发送。</p><p>而一种可靠的通信传输协议，如TCP协议，由下面几个特性来保证数据传输的可靠性与准确性：序列号和确认应答信号、超时重发控制、连接管理、滑动窗口控制、流量控制、拥塞控制。在TCP协议的发送端与接收端，有三次握手建立连接和四次挥手关闭连接的过程，进一步保证信息传输的可靠。在以后的传输方案设计中，这些典型可靠的协议是值得借鉴的。</p><h3 id="9、总结"><a href="#9、总结" class="headerlink" title="9、总结"></a>9、总结</h3><p>最后，感谢各位老师在赛前为我答疑解惑，帮助我调整心态。在赛后对我进行开导，使我烦躁郁闷的心情得以缓解。同行的各位队友也积极给予帮助。总之，虽然本次比赛虽然成绩不理想，但第一次以队长的身份参加比赛，我还是学到了很多的东西。学会了如何在赛前调整心态，学会了如何与其他竞争对手交流，学会了在面对失败时如何自我开导，更加深刻认识到作为队长所担负的责任。而这些都将变成我受用一生的宝贵经验，助我在未来的发展中少走一些弯路。</p><p>张乾玉   </p><p>2020年11月26日</p>]]></content>
      
      
      <categories>
          
          <category> Robot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thought </tag>
            
            <tag> 2020robot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020robot_introduction</title>
      <link href="2021/04/08/2020robot-introduction/"/>
      <url>2021/04/08/2020robot-introduction/</url>
      
        <content type="html"><![CDATA[<h1 id="The-Dancing-robot"><a href="#The-Dancing-robot" class="headerlink" title="The Dancing robot"></a>The Dancing robot</h1><h2 id="一、机器人设计创意及出发点"><a href="#一、机器人设计创意及出发点" class="headerlink" title="一、机器人设计创意及出发点"></a>一、机器人设计创意及出发点</h2><h4 id="主题设计："><a href="#主题设计：" class="headerlink" title="主题设计："></a>主题设计：</h4><p>采用拟人化的方法，机器人代表的是一个正处在人生困境当中的年轻人。生活的压力让他苦不堪言，他也曾抱怨命运的不公。但他渐渐意识到自己所担负的责任，明白自己不能再颓废下去，决定向命运打出“致命一击”。物质上的贫穷并不可怕，可怕的是精神上的贫穷。一个自尊自强的人总会活出自己的风采。因为纵使身处逆境，贫困潦倒之时他还有勇气对别人说：我总有一天要大放异彩！就像歌词中所说，像一个战士，与命运斗争！</p><h4 id="外形设计："><a href="#外形设计：" class="headerlink" title="外形设计："></a>外形设计：</h4><p>机器人设计灵感来源于日本特摄系列英雄故事《假面骑士》，躯干仿人形设计。为保证机器人整体美观，在四肢和躯干加以装甲和披风装饰。机器人动作依靠5组17台串行舵机配合完成，其中不乏高难度动作。</p><h4 id="功能设计："><a href="#功能设计：" class="headerlink" title="功能设计："></a>功能设计：</h4><p>机器人是一台基于stm32单片机与树莓派微型电脑的多功能机器人，可实现行走避障、动作编程、视觉识别、语音识别等多种功能。此外，若搭配激光雷达，生命体征仪等检测设备，可参与危险或狭窄地形勘测，管道勘测，抢险救灾等工作。若为其装载故事库、题库等教育资源，还可作为益智启蒙机器人，进入普通家庭的生活。</p><h2 id="二、机器人设计原理"><a href="#二、机器人设计原理" class="headerlink" title="二、机器人设计原理"></a>二、机器人设计原理</h2><h3 id="2-1机械结构设计"><a href="#2-1机械结构设计" class="headerlink" title="2.1机械结构设计"></a>2.1机械结构设计</h3><p>机器人展开长度19cm，宽度20cm，高度50cm，机器人重量在2.5千克左右，大小及重量符合比赛规则要求，具体设计如下所示：</p><h4 id="2-1-1舵机及其分配"><a href="#2-1-1舵机及其分配" class="headerlink" title="2.1.1舵机及其分配"></a>2.1.1舵机及其分配</h4><p>人形机器人一共使用17个AX-12A串行总线舵机，其中4台串行舵机构成一只胳膊，共两只。每只胳膊长度在18cm左右。4台串行舵机构成一条腿，共两条。每条腿长度在28cm左右，1台串行舵机构成颈部以供头部转向。具体舵机安装位置，如图所示：</p><p>​    <img src="https://i.loli.net/2021/04/08/amMBS2etZknv5UN.png" alt="image-20210408181327419"></p><p>图 1   舵机分配图</p><h4 id="2-1-2各传感器安装位置"><a href="#2-1-2各传感器安装位置" class="headerlink" title="2.1.2各传感器安装位置"></a>2.1.2各传感器安装位置</h4><p>机器人使用三个超声波模块进行定位。根据比赛规则，场地围挡高10cm，因此三个超声波全部安装在机器人足部。其中两个传感器分别安装在机器人左右足的前部，探测方向与机器人朝向一致。另外一个超声波安装在机器人左侧足的左侧，探测方向与机器人朝向垂直。</p><p><img src="https://i.loli.net/2021/04/08/G3M7Nb4RFl2YyhX.png" alt="image-20210408181338569"></p><p>图 2传感器安装位置图</p><h4 id="2-1-3电源安装位置"><a href="#2-1-3电源安装位置" class="headerlink" title="2.1.3电源安装位置"></a>2.1.3电源安装位置</h4><p>机器人表演过程中实际使用一只电池供电。但因电池本身具有一定重量，为保证机器人重心位于其中线，故在另一侧再加装一块电池。同时。为保证机器人整体重心较低，降低表演中途机器人摔倒的风险，故将两只电池全部置于机器人足后部。在机械结构设计时特意为电池预留了电池安装槽。具体放置方案如下图所示：</p><p><img src="https://i.loli.net/2021/04/08/uP2ndtzRxqIaDVM.png" alt="image-20210408181348784"></p><p>图 3   电池安装位置图</p><h4 id="2-1-4机器人结构材料"><a href="#2-1-4机器人结构材料" class="headerlink" title="2.1.4机器人结构材料"></a>2.1.4机器人结构材料</h4><p>机器人3D打印结构材料全部采用PLA塑料。聚乳酸（PLA）是一种新型的生物降解材料，使用可再生的植物资源（如玉米）所提取的淀粉原料经由发酵过程制成乳酸，再通过高分子合成转换成聚乳酸。聚乳酸也称为聚丙交酯，属于聚酯家族。聚乳酸是以乳酸为主要原料聚合得到的聚合物，原料来源充分而且可以再生。聚乳酸的生产过程无污染，而且产品可以生物降解，实现在自然界中的循环，因此是理想的绿色高分子材料。（PLA材料实物图见6.3）<br>聚乳酸（PLA）的优势：<br>1、聚乳酸具有优异的生物降解性，废弃后一年内能被土壤中的微生物100%完全降解，生成二氧化碳和水，对环境不产生污染。<br>世界二氧化碳排放量据新闻报道在2030年全球温度将升至60℃，普通塑料的处理方法依然是焚烧火化，造成大量温室气体排入空气中，而聚乳酸则是掩埋在土壤里降解，产生的二氧化碳直接进入土壤有机质或被植物吸收，不会排入空气中，不会造成温室效应。<br>2、PLA塑料可塑性较好，同时拥有良好的光泽性和透明度。另外，聚乳酸还具有最良好的抗拉强度及延展度，十分适合作为机器人的主体结构材料。</p><h3 id="2-2系统硬件设计（实物图见点三）"><a href="#2-2系统硬件设计（实物图见点三）" class="headerlink" title="2.2系统硬件设计（实物图见点三）"></a>2.2系统硬件设计（实物图见点三）</h3><h4 id="2-2-1主控板"><a href="#2-2-1主控板" class="headerlink" title="2.2.1主控板"></a>2.2.1主控板</h4><p>主控板由队员自主设计及焊制，其中主控芯片采用STM32F103C8T6，USB部分采用NC7WZ241非反转缓冲器和线路驱动器，使用2输入3输出，工作电压在1.65V-5.5V。电源模块部分采用LM1117 低压差稳压器、LMV32低电压单运算放大器及SN74LVC 8通道LVTTL输入输出逻辑变换器。</p><h4 id="2-2-2摄像头模组"><a href="#2-2-2摄像头模组" class="headerlink" title="2.2.2摄像头模组"></a>2.2.2摄像头模组</h4><p>机器人采用500万像素摄像头(含CS1接口排线)作为拍照系统,该拍照模块与主控制板通过一条15芯的排线(CSI接口)进行连接。使用视频编码组件使用图像编码组件,由于raspistillYUV是直接将YUV或RGB从摄像组件输出到文件,所以不需要编码组件。使用OpenMAX的mmalAPI为所有程序进行编写且通过命令行的方式进行调用,本设计将通过调用OpenCV内部函数的方式进行拍照。</p><h4 id="2-2-3树莓派微型电脑"><a href="#2-2-3树莓派微型电脑" class="headerlink" title="2.2.3树莓派微型电脑"></a>2.2.3树莓派微型电脑</h4><p>本机器人搭载的是树莓派3B+系列。树莓派是一款基于ARM的微型电脑主板，以SD/MicroSD卡为内存硬盘，卡片主板周围有1/2/4个USB接口和一个10/100 以太网接口（A型没有网口），可连接键盘、鼠标和网线，同时拥有视频模拟信号的电视输出接口和HDMI高清视频输出接口，以上部件全部整合在一张仅比信用卡稍大的主板上。<br>与常见的51单片机和STM32等这类的嵌入式微控制器相比，不仅可以完成相同的IO引脚控制之外，还能运行有相应的操作系统，可以完成更复杂的任务管理与调度，能够支持更上层应用的开发，为了开发者提供了更广阔的应用空间。比如开发语言的选择不仅仅只限于C语言，连接底层硬件与上层应用，可以实现物联网的云控制和云管理，也可以忽略树莓派的IO控制，使用树莓派搭建小型的网络服务器，做一些小型的测试开发和服务。<br>与一般的PC计算机平台相比，树莓派可以提供的IO引脚，能够直接控制其他底层硬件的功能，这是一般PC计算机做不到的，当然，树莓派体积小，成本低，照常可以完成一些PC任务与应用。</p><h4 id="2-2-4串行舵机"><a href="#2-2-4串行舵机" class="headerlink" title="2.2.4串行舵机"></a>2.2.4串行舵机</h4><p>舵机均使用AX-12A串行总线舵机，共17个。<br>2.2.5电源<br>采用2200mah 12V 航模锂电池。</p><h3 id="2-3程序设计"><a href="#2-3程序设计" class="headerlink" title="2.3程序设计"></a>2.3程序设计</h3><h4 id="2-3-1踩圈设计"><a href="#2-3-1踩圈设计" class="headerlink" title="2.3.1踩圈设计"></a>2.3.1踩圈设计</h4><p>机器人采用三个超声波传感器，机器人左足侧面传感器，探测方向与机器人朝向垂直，与机器人前进方向一致，用于监测前方距场地的距离；左右足前部传感器相互配合，监测机身是否与墙壁平行。舞蹈结束后，前行直走，直到朝前的传感器监测距离小于阈值时，左转至机身与墙壁平行，从而保证机器人与场地边缘大致平行。<br>在走动过程中，若机器人距场地边缘过近，且呈靠近趋势，则机器人执行左转动作；相反，若机器人距场地边缘过远，且呈远离趋势，则机器人执行右转动作；若机器人前进方向传感器检测到距离小于一定阈值，则执行连续左转动作。<br>在踩圈过程中，程序对三个传感器的回传数据实现实时监测、闭环控制。</p><p> <img src="https://i.loli.net/2021/04/08/FLawryGcxY6pBgd.png" alt="image-20210408181446875"><img src="https://i.loli.net/2021/04/08/8W2XtFVYvLnj7EC.png" alt="image-20210408181456116"><img src="https://i.loli.net/2021/04/08/cMu5sECzFBtnHmO.png" alt="image-20210408181507386"></p><p>​                                                图 4   踩圈过程示意</p><h4 id="2-3-2舞蹈设计"><a href="#2-3-2舞蹈设计" class="headerlink" title="2.3.2舞蹈设计"></a>2.3.2舞蹈设计</h4><p>机器人行走的一个关键问题是腿部与跨部的配合，我们通过四个舵机的连接使用实现了单条腿的驱动，而且腿部的两个舵机可以使腿部的灵活性大大提高，腰轴部的舵机确保上下半身的转动及多动作的结合，关节的灵活性可以保证机器人舞蹈动作的更加协调以及机械结构的更加合理以及受力的均衡性大大提高。跨部可以由一个舵机控制腿部的转向以及使动作更加灵活，完美。<br>    机器人在行走时，采用横向步态，这种方法保证了行走的平稳性及时效性，使得行走得以实现快速和稳定。实际上，这只需两腿上的四个个舵机相互贴合左往返运动即可。在模拟实际情况腰部、头部重量时，胯部的旋转动作要更为自然、流畅，不会出现因舵机力矩不足而步伐摆动不到位的情况。<br>在舞蹈动作程序编写部分首先要考虑机器人的动作连贯性，即胳膊和腿部的运动顺序，抬起高度；其次，要考虑动作次序对于整体连贯性的影响，例如，先进行上半身的舞蹈动作，然后进行下半身的姿势及动作，还是结合按照顺序依次结合的动作，这样的顺序不仅可以让动作更具连贯性，而且能够减少舵机所受力矩，最大限度地保护舵机不受损坏。其次，考虑了所搭配的背景音乐、节拍，使舞蹈的动作更加有韵律感，更加贴合音乐，更具有观赏性。<br>在舞蹈动作当中，时刻体现着设计主题。如俯卧撑、“闪电”等动作，表达的便是一种自强不息、不屈于命运的精神。 </p><h2 id="三、电路原理图、PCB板图及部分硬件实物图"><a href="#三、电路原理图、PCB板图及部分硬件实物图" class="headerlink" title="三、电路原理图、PCB板图及部分硬件实物图"></a>三、电路原理图、PCB板图及部分硬件实物图</h2><h3 id="3-1电路原理图"><a href="#3-1电路原理图" class="headerlink" title="3.1电路原理图"></a>3.1电路原理图</h3><p>图 5   电路原理图（出于保密考虑，此处暂不给出原理图）</p><h3 id="3-2-PCB设计图"><a href="#3-2-PCB设计图" class="headerlink" title="3.2 PCB设计图"></a>3.2 PCB设计图</h3><p><img src="https://i.loli.net/2021/04/08/ZOmaqyQfH4vMWbT.png" alt="image-20210408181624347"></p><p>图 6   PCB设计图</p><h3 id="3-3-PCB实物图"><a href="#3-3-PCB实物图" class="headerlink" title="3.3 PCB实物图"></a>3.3 PCB实物图</h3><p><img src="https://i.loli.net/2021/04/08/ROMYB3IbFcD7Wg9.png" alt="image-20210408181641795"></p><p>图 7   PCB实物图及接口定义</p><p>1<del>5——舵机串行接口1到5<br>6</del>8——超声波通信接口1到3<br>9——树莓派通信接口<br>10——电源接口<br>11——复位按键</p><h3 id="3-4-焊制电路板现场图"><a href="#3-4-焊制电路板现场图" class="headerlink" title="3.4 焊制电路板现场图"></a>3.4 焊制电路板现场图</h3><p><img src="https://i.loli.net/2021/04/08/I8Qn3K7bB6l2rvk.png" alt="image-20210408181701639"></p><p>图 8   焊制电路板现场</p><h3 id="3-5-摄像头模组"><a href="#3-5-摄像头模组" class="headerlink" title="3.5 摄像头模组"></a>3.5 摄像头模组</h3><p><img src="https://i.loli.net/2021/04/08/7b1tpOqzv6WjXsy.png" alt="image-20210408181711484"></p><p>图 9   摄像头模组实物图</p><h3 id="3-6-树莓派微型电脑"><a href="#3-6-树莓派微型电脑" class="headerlink" title="3.6 树莓派微型电脑"></a>3.6 树莓派微型电脑</h3><p><img src="https://i.loli.net/2021/04/08/exIsorWY8fTyAX3.png" alt="image-20210408181720204"></p><p>图 10   树莓派实物图</p><h3 id="3-7-AX-12A串行舵机与电源"><a href="#3-7-AX-12A串行舵机与电源" class="headerlink" title="3.7 AX-12A串行舵机与电源"></a>3.7 AX-12A串行舵机与电源</h3><p><img src="https://i.loli.net/2021/04/08/EyhVoSx6IvwJBfR.png" alt="image-20210408181732163"><img src="https://i.loli.net/2021/04/08/Phb5EdJlTjut4NO.png" alt="image-20210408181739852"></p><p>图 11串行舵机及电源实物图 </p><h2 id="四、软件调试界面及部分源代码"><a href="#四、软件调试界面及部分源代码" class="headerlink" title="四、软件调试界面及部分源代码"></a>四、软件调试界面及部分源代码</h2><h3 id="4-1-基于LabWindows-CVI测控软件的上位机界面"><a href="#4-1-基于LabWindows-CVI测控软件的上位机界面" class="headerlink" title="4.1 基于LabWindows/CVI测控软件的上位机界面"></a>4.1 基于LabWindows/CVI测控软件的上位机界面</h3><p><img src="https://i.loli.net/2021/04/08/og5K3qEemWXA8zY.png" alt="image-20210408181754845"></p><p>图 12   上位机软件界面</p><h3 id="4-2-上位机底层代码（出于保密考虑，此处暂不展示代码。代码文件见本人Github仓库，查看密码请联系作者）"><a href="#4-2-上位机底层代码（出于保密考虑，此处暂不展示代码。代码文件见本人Github仓库，查看密码请联系作者）" class="headerlink" title="4.2 上位机底层代码（出于保密考虑，此处暂不展示代码。代码文件见本人Github仓库，查看密码请联系作者）"></a>4.2 上位机底层代码（出于保密考虑，此处暂不展示代码。代码文件见本人Github仓库，查看密码请联系作者）</h3><h4 id="4-2-1-串口通信（发送）"><a href="#4-2-1-串口通信（发送）" class="headerlink" title="4.2.1 串口通信（发送）"></a>4.2.1 串口通信（发送）</h4><h4 id="4-2-2-串口通信（接收）"><a href="#4-2-2-串口通信（接收）" class="headerlink" title="4.2.2 串口通信（接收）"></a>4.2.2 串口通信（接收）</h4><h4 id="4-2-3-TXT文件存储"><a href="#4-2-3-TXT文件存储" class="headerlink" title="4.2.3 TXT文件存储"></a>4.2.3 TXT文件存储</h4><h3 id="4-3-利用上位机调试现场"><a href="#4-3-利用上位机调试现场" class="headerlink" title="4.3 利用上位机调试现场"></a>4.3 利用上位机调试现场</h3><p><img src="https://i.loli.net/2021/04/08/D64Ynzh2KsZPNxS.png" alt="image-20210408182047133"></p><p>图 13   上位机调试</p><h3 id="4-4-下位机代码（出于保密考虑，此处暂不展示代码。代码文件见本人Github仓库，查看密码请联系作者）"><a href="#4-4-下位机代码（出于保密考虑，此处暂不展示代码。代码文件见本人Github仓库，查看密码请联系作者）" class="headerlink" title="4.4 下位机代码（出于保密考虑，此处暂不展示代码。代码文件见本人Github仓库，查看密码请联系作者）"></a>4.4 下位机代码（出于保密考虑，此处暂不展示代码。代码文件见本人Github仓库，查看密码请联系作者）</h3><h4 id="4-4-1-下位机主函数"><a href="#4-4-1-下位机主函数" class="headerlink" title="4.4.1 下位机主函数"></a>4.4.1 下位机主函数</h4><h4 id="4-4-2-下位机串口通信"><a href="#4-4-2-下位机串口通信" class="headerlink" title="4.4.2 下位机串口通信"></a>4.4.2 下位机串口通信</h4><h3 id="4-5-动作执行程序（出于保密考虑，此处暂不展示代码。代码文件见本人Github仓库，查看密码请联系作者）"><a href="#4-5-动作执行程序（出于保密考虑，此处暂不展示代码。代码文件见本人Github仓库，查看密码请联系作者）" class="headerlink" title="4.5 动作执行程序（出于保密考虑，此处暂不展示代码。代码文件见本人Github仓库，查看密码请联系作者）"></a>4.5 动作执行程序（出于保密考虑，此处暂不展示代码。代码文件见本人Github仓库，查看密码请联系作者）</h3><h4 id="4-5-1-主函数"><a href="#4-5-1-主函数" class="headerlink" title="4.5.1 主函数"></a>4.5.1 主函数</h4><h4 id="4-5-2-超声波与树莓派串口通信代码（部分）"><a href="#4-5-2-超声波与树莓派串口通信代码（部分）" class="headerlink" title="4.5.2 超声波与树莓派串口通信代码（部分）"></a>4.5.2 超声波与树莓派串口通信代码（部分）</h4><h4 id="4-5-3-动作执行程序（部分）"><a href="#4-5-3-动作执行程序（部分）" class="headerlink" title="4.5.3 动作执行程序（部分）"></a>4.5.3 动作执行程序（部分）</h4><h2 id="五、零件三维图"><a href="#五、零件三维图" class="headerlink" title="五、零件三维图"></a>五、零件三维图</h2><h3 id="5-1-机器人整体装配三维图"><a href="#5-1-机器人整体装配三维图" class="headerlink" title="5.1 机器人整体装配三维图"></a>5.1 机器人整体装配三维图</h3><p><img src="https://i.loli.net/2021/04/08/ngAliXxVYzaw19u.png" alt="image-20210408182204711"><img src="https://i.loli.net/2021/04/08/mryhPvXtY9lucIk.png" alt="image-20210408182212607"></p><p>图 14   机器人整体装配图</p><h3 id="5-2-机器人整体装配三视图"><a href="#5-2-机器人整体装配三视图" class="headerlink" title="5.2 机器人整体装配三视图"></a>5.2 机器人整体装配三视图</h3><p><img src="https://i.loli.net/2021/04/08/VrbClHJF9n6OcRK.png" alt="image-20210408182228520"><img src="https://i.loli.net/2021/04/08/YXLITn3FDM1C8dO.png" alt="image-20210408182236035"><img src="https://i.loli.net/2021/04/08/GYmJZl4uE57qPiH.png" alt="image-20210408182250504"></p><p>图 15   机器人整体装配三视图 </p><h3 id="5-3-部分零件三维图"><a href="#5-3-部分零件三维图" class="headerlink" title="5.3 部分零件三维图"></a>5.3 部分零件三维图</h3><table><thead><tr><th>舵盘</th><th>肩甲</th></tr></thead><tbody><tr><td><img src="https://i.loli.net/2021/04/08/XcIPUCp8k6TqwHt.png" alt="image-20210408182413917"></td><td><img src="https://i.loli.net/2021/04/08/V4w2JvzQoF1md9f.png" alt="image-20210408182421247"></td></tr><tr><td>舵机槽（小）</td><td>舵机槽（大）</td></tr><tr><td><img src="https://i.loli.net/2021/04/08/bC5XL2pDkInaSer.png" alt="image-20210408182429668"></td><td><img src="https://i.loli.net/2021/04/08/1r8ETKoXRMHbBet.png" alt="image-20210408182433885"></td></tr><tr><td>头部</td><td>头部连接件</td></tr><tr><td><img src="https://i.loli.net/2021/04/08/oA4eZ2sVTnxIRwf.png" alt="image-20210408182443929"></td><td><img src="https://i.loli.net/2021/04/08/F4KwVNBsLUcpQ2d.png" alt="image-20210408182450654"></td></tr><tr><td>胸甲</td><td>躯体支撑甲</td></tr><tr><td><img src="https://i.loli.net/2021/04/08/JcZbNfCpyTVUkIj.png" alt="image-20210408182457878"></td><td><img src="https://i.loli.net/2021/04/08/Nbme1EqupMUWQkn.png" alt="image-20210408182505462"></td></tr><tr><td>轴套</td><td>左（右）脚掌</td></tr><tr><td><img src="https://i.loli.net/2021/04/08/ugH8xwE1YmMNLBF.png" alt="image-20210408182513572"></td><td><img src="https://i.loli.net/2021/04/08/gzyviunF2BKmI9Y.png" alt="image-20210408182520561"></td></tr><tr><td>左手掌</td><td>右手掌</td></tr><tr><td><img src="https://i.loli.net/2021/04/08/mTdZItCjnXl5aLq.png" alt="image-20210408182528028"></td><td><img src="https://i.loli.net/2021/04/08/saUF8fWDPqB7CkI.png" alt="image-20210408182534675"></td></tr><tr><td>装饰甲（1）</td><td>装饰甲（2）</td></tr><tr><td><img src="https://i.loli.net/2021/04/08/rt9mRUEVy4DTxoJ.png" alt="image-20210408182549297"></td><td><img src="https://i.loli.net/2021/04/08/rsDzITUQn9jMcP4.png" alt="image-20210408182555426"></td></tr><tr><td>脚部覆盖件</td><td></td></tr><tr><td><img src="https://i.loli.net/2021/04/08/izBUrA1uFN3wSTX.png" alt="image-20210408182601543"></td><td></td></tr></tbody></table><p> </p><h3 id="5-4-部分零件实物图"><a href="#5-4-部分零件实物图" class="headerlink" title="5.4 部分零件实物图"></a>5.4 部分零件实物图</h3><p> <img src="https://i.loli.net/2021/04/08/PEjuxDb63sYICZe.png" alt="image-20210408182620830"></p><p><img src="https://i.loli.net/2021/04/08/TWHqCNrQBg1psGu.png" alt="image-20210408182633313"></p><p>图 16   部分零件实物图 </p><h2 id="六、零件加工及制作过程"><a href="#六、零件加工及制作过程" class="headerlink" title="六、零件加工及制作过程"></a>六、零件加工及制作过程</h2><h3 id="6-1-3D打印机实物图"><a href="#6-1-3D打印机实物图" class="headerlink" title="6.1  3D打印机实物图"></a>6.1  3D打印机实物图</h3><p><img src="C:\Users\11817\AppData\Roaming\Typora\typora-user-images\image-20210408182641928.png" alt="image-20210408182641928"></p><p>图 17   队伍所用3D打印机</p><h3 id="6-2-打印零部件过程中"><a href="#6-2-打印零部件过程中" class="headerlink" title="6.2 打印零部件过程中"></a>6.2 打印零部件过程中</h3><p>机器人零部件首先由队员在Solidworks建模软件上完成建模工作，并将文件保存为STL格式。之后使用JGreat切片软件对模型进行切片，生成xCode文件。将生成的文件导入打印机存储卡内。在打印机操作界面点击“开始”，开始打印工作。</p><p><img src="https://i.loli.net/2021/04/08/r5fmlFwLU42P9eD.png" alt="image-20210408182707532"></p><p>图 18   打印零部件过程中 </p><h3 id="6-3-打印零件所使用的PLA材料实物图"><a href="#6-3-打印零件所使用的PLA材料实物图" class="headerlink" title="6.3 打印零件所使用的PLA材料实物图"></a>6.3 打印零件所使用的PLA材料实物图</h3><p><img src="https://i.loli.net/2021/04/08/7e86Uu543zytmZk.png" alt="image-20210408182717477"></p><p>图 19   PLA材料实物图</p><h3 id="6-4-部分零件成品"><a href="#6-4-部分零件成品" class="headerlink" title="6.4 部分零件成品"></a>6.4 部分零件成品</h3><p><img src="https://i.loli.net/2021/04/08/LAwpX1RMaZ5qkCN.png" alt="image-20210408182726410"></p><p>图 20   部分零件成品图</p>]]></content>
      
      
      <categories>
          
          <category> Robot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2020robot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2048_Finish_report</title>
      <link href="2021/04/07/2048-finish-report/"/>
      <url>2021/04/07/2048-finish-report/</url>
      
        <content type="html"><![CDATA[<h1 id="2048游戏及管理平台"><a href="#2048游戏及管理平台" class="headerlink" title="2048游戏及管理平台"></a>2048游戏及管理平台</h1><h2 id="一、项目内容"><a href="#一、项目内容" class="headerlink" title="一、项目内容"></a>一、项目内容</h2><h3 id="1-需求分析"><a href="#1-需求分析" class="headerlink" title="1.需求分析"></a>1.需求分析</h3><h4 id="1-1-设计目标"><a href="#1-1-设计目标" class="headerlink" title="1.1 设计目标"></a>1.1 设计目标</h4><h5 id="1、基本要求："><a href="#1、基本要求：" class="headerlink" title="1、基本要求："></a>1、基本要求：</h5><p>（1）布设游戏的场景；<br>（2）管理游戏的玩家,包括记录并显示玩家的用户名、实时排名以及得分，游戏过程中的记录信息包括玩家操作等；<br>（3）按规则执行游戏过程，判定游戏胜利；<br>（4）记录游戏过程包括玩家操作以及每一步操作的结果，并可以通过图形界面演示重现；<br>（5）游戏规则：每次可以选择上下左右其中一个方向去滑动，每滑动一次，所有的数字方块都会往滑动的方向靠拢外，系统也会在空白的地方乱数出现一个数字方块，相同数字的方块在靠拢、相撞时会相加。系统给予的数字方块不是2就是4，玩家要想办法在这小小的16格范围中凑出“2048”这个数字方块；<br>（6）矩阵的四周有四个按钮，分别表示向左、向右、向上、向下移动。当某一方向无法移动时，该按钮应该被隐藏（变灰）。</p><h5 id="2、发挥部分："><a href="#2、发挥部分：" class="headerlink" title="2、发挥部分："></a>2、发挥部分：</h5><p>（1）限定游戏时间：在游戏界面添加倒计时，并设计倒计时程序。当计时到时游戏结束并重置界面；<br>（2）添加背景音乐；<br>（3）增加滚动字幕，字幕内容为一些名人名言，提升游戏过程中的趣味性；<br>（4）在演示玩家操作时，用户可选择演示播放速度，以满足用户不同需求；<br>（5）实现数据可迁移，方便用户在不同PC设备上使用；<br>（6）添加用户登录界面，方便对玩家的管理；<br>（7）在游戏界面添加时间日期显示，显示当前的日期和时间；<br>（8）添加键盘控制功能，玩家可以通过键盘控制界面上下左右操作。</p><h4 id="1-2-功能需求"><a href="#1-2-功能需求" class="headerlink" title="1.2 功能需求"></a>1.2 功能需求</h4><p>（1）用户登录：打开游戏程序后，用户在用户名输入框输入用户名即可进入游戏。<br>（2）开始游戏：游戏界面左上角显示游戏倒计时，用户应在倒计时结束前使游戏面盘内的数字尽可能大。用户可以通过鼠标点击界面的四个方向按钮或者键盘的上下左右键进行操作。当倒计时间到或者游戏无法继续进行时，将弹出“Game Over!”提示信息。<br>（3）退出登录：当用户想要切换登录账户或者退出游戏时，可以点击界面右下角的“退出登陆”按键，游戏将返回登陆界面，同时正在进行的游戏将中断。<br>（4）排行榜：游戏界面右侧文本框显示游戏玩家实时排名。若用户需要刷新排名，可点击右上角“刷新”按键。<br>（5）回放按键：若用户需要回访排行榜内玩家游戏过程，可先在右下角下拉文本框内选择要观看的玩家排名，后点击“观看”按键。之后玩家在弹出的对话框内选择倍速播放的速度，游戏面盘内会按照设定倍速演示游戏过程。演示结束后，游戏面盘会重置，回到游戏。</p><p>（6）其他功能：<br>    当前时间显示：游戏界面左下角显示当前日期和时间，方便用户管理游戏时间；<br>    名人名言：游戏界面中下部滚动显示名人名言，在游戏过程中增添了文化氛围；<br>    背景音乐：游戏运行过程中会有舒缓的轻音乐作为背景音乐，使用户在游戏过程中保持平静和放松的心情；<br>    操作记录：游戏界面中部文本框内显示用户登录信息和实时操作，方便用户查看与记录。</p><h4 id="1-3-假定和约束"><a href="#1-3-假定和约束" class="headerlink" title="1.3 假定和约束"></a>1.3 假定和约束</h4><p>（1）假定用户在输入用户名等信息后，不使用Enter健输入，而是点击确定按钮。并且假定用户在整个游戏过程中不使用Enter键。因为当用户按下Enter键时，Windows就会自动去找输入焦点落在了哪一个按钮上，当获得焦点的按钮的四周将被点线矩形包围。如果所有按钮都没有获得输入焦点，Windows就会自动去寻找程序或资源所指定的默认按钮(默认按钮边框较粗)。如果对话框没有默认按钮，那么即使对话框中没有OK按钮，OnOK函数也会自动被调用。在本游戏中，OnOK函数内并没有响应，如果用户按下Enter，会导致游戏直接关闭。<br>（2）假定用户在观看回放的过程中，不进行其它操作。因为在程序中，当开始观看时，其它功能会被锁定，无法正常运行。<br>（3）假定用户在使用过程中，不会修改游戏的数据文件。因为游戏中的排名信息以及操作数据是读取自这些数据文件。</p><h3 id="2-结构设计"><a href="#2-结构设计" class="headerlink" title="2.结构设计"></a>2.结构设计</h3><p><img src="https://i.loli.net/2021/04/08/bKLTdWiwyZGONl1.png" alt="image-20210407205829752"></p><p>表1：各模块名称及其作用</p><table><thead><tr><th>名称</th><th>功能</th></tr></thead><tbody><tr><td>用户名输入模块</td><td>使玩家能够输入用户名，并将输入的用户名存储以便后续的调用</td></tr><tr><td>对话框初始化模块</td><td>初始化正式游戏界面，包括绘制面板、消息映射等</td></tr><tr><td>定时器模块</td><td>配置定时器，向倒计时、当前时间显示和名人名言滚动显示等功能提供统一的时间和频率</td></tr><tr><td>操作模块</td><td>配置键盘方向键和四个方向按钮，并对其消息进行拦截和处理，使玩家能通过界面按键和键盘进行控制</td></tr><tr><td>计算模块</td><td>每进行一次操作，对游戏面盘内的数字进行计算</td></tr><tr><td>操作实时显示模块</td><td>在界面文本框内实时显示用户登录信息和操作信息</td></tr><tr><td>文件读写模块</td><td>将用户的基本信息和操作信息通过文件形式存储在硬盘，并且实时更新。在需要时进行读取。</td></tr><tr><td>排行榜模块</td><td>利用所存储的信息，对所有玩家进行排序，并在界面文本框内实时显示玩家排名</td></tr><tr><td>观看模块</td><td>对高分玩家的游戏过程进行回放，用户可以自行选择播放速度</td></tr><tr><td>退出登录模块</td><td>用于切换用户或结束游戏</td></tr></tbody></table><p><img src="https://i.loli.net/2021/04/08/5s4VSuyr1LWtRap.png" alt="image-20210407210510889"></p><h3 id="3-详细设计"><a href="#3-详细设计" class="headerlink" title="3.详细设计"></a>3.详细设计</h3><h4 id="3-1-工程建立"><a href="#3-1-工程建立" class="headerlink" title="3.1 工程建立"></a>3.1 工程建立</h4><ol><li><p>打开Visual Studio2017，点击文件——新建——项目；</p></li><li><p>新建MFC应用；</p><p><img src="https://i.loli.net/2021/04/08/DWvTdVbfpO6FgU3.png" alt="image-20210407210621548"></p></li></ol><p>图3：新建项目界面<br>3. 选择“基于对话框”；</p><p>   <img src="https://i.loli.net/2021/04/08/DWvTdVbfpO6FgU3.png" alt="image-20210407210631868"></p><p>图4：应用程序类型选项界面</p><ol start="4"><li>   点击“完成”即可建立工程。</li></ol><h4 id="3-2-界面设计"><a href="#3-2-界面设计" class="headerlink" title="3.2 界面设计"></a>3.2 界面设计</h4><ol><li><p>打开创建的工程文件，选择资源视图，打开对话框界面；</p><p><img src="https://i.loli.net/2021/04/08/BGkvWVIdjf8zyUL.png" alt="image-20210407210722995"></p></li></ol><p>图5：对话框初始界面<br>2. 将所需的控件拖入对话框并放置在合适的位置；</p><p>   <img src="https://i.loli.net/2021/04/08/dBIDxlGZcFNbhU8.png" alt="image-20210407210731733"></p><p>图6：完成后的对话框界面<br>3. 再次打开资源视图，创建新的对话框界面为欢迎界面</p><p>   <img src="https://i.loli.net/2021/04/08/FiwdkT4QJ8RhVP5.png" alt="image-20210407210739776"></p><p>图7：新建对话框界面操作<br>4. 向新建的对话框界面添加控件</p><p>   <img src="https://i.loli.net/2021/04/08/GL3yWtVzUrRl21F.png" alt="image-20210407210748103"></p><p>图8：完成后的欢迎界面<br>5. 最后，通过On_Paint 函数对窗口进一步美化，配置字体.背景.窗口大小等，并绘制游戏面盘；</p><p>   <img src="https://i.loli.net/2021/04/08/cOheL3U5Yv6KDr7.png" alt="image-20210407210759280"></p><p>图9：OnPaint函数部分代码</p><h4 id="3-3-用户名输入模块设计"><a href="#3-3-用户名输入模块设计" class="headerlink" title="3.3 用户名输入模块设计"></a>3.3 用户名输入模块设计</h4><ol><li><p>从“资源视图”打开欢迎界面，放置用于用户输入的文本框；</p><p><img src="https://i.loli.net/2021/04/08/YKgPfyoEwUF7q39.png" alt="image-20210407210822757"></p></li></ol><p>图10：用户名输入框<br>2. 当按下欢迎界面的确定按钮时，对文本框内文字进行处理。因此在“确定”按钮的响应函数内，首先检测文本框内是否有内容，然后将用户名转存至新建的游戏界面类成员内，之后使用EndDialog函数与DoModal函数打开游戏界面，关闭欢迎界面；</p><p>   <img src="https://i.loli.net/2021/04/08/FBbh6yDtjgcsAlK.png" alt="image-20210407210830670"></p><p>图11：确定按键响应函数</p><h4 id="3-4-定时器模块设计"><a href="#3-4-定时器模块设计" class="headerlink" title="3.4 定时器模块设计"></a>3.4 定时器模块设计</h4><ol><li><p>首先使用类向导，为游戏程序添加WM_TIMER消息映射，并生成OnTimer处理函数；</p><p><img src="https://i.loli.net/2021/04/08/K5fcOdrHISEeQTg.png" alt="image-20210407210907203"></p></li></ol><p>图12：类向导界面<br>2. 在初始化函数OnInitDialog中配置两个定时器的编号和定时间隔；</p><p>   <img src="https://i.loli.net/2021/04/08/D6aNOpZs8MJIdBr.png" alt="image-20210407210917559"></p><p>图13：配置定时器代码<br>3. 在生成的OnTimer处理函数中，添加倒计时.显示当前时间以及名人名言滚动显示的代码。通过对nIDEvent变量的判断，为不同的功能选择不同的时间频率；</p><p>   <img src="https://i.loli.net/2021/04/08/yLuaFQmVhbZHe7z.png" alt="image-20210407210927767"></p><p>图14：OnTimer函数部分代码</p><h4 id="3-4-操作模块设计"><a href="#3-4-操作模块设计" class="headerlink" title="3.4 操作模块设计"></a>3.4 操作模块设计</h4><ol><li><p>在游戏中玩家可通过键盘或鼠标点击按钮来操作游戏；</p></li><li><p>键盘操作：通过重载虚函数PreTranslateMessage()对键盘上下左右键进行截取与响应；</p><p><img src="https://i.loli.net/2021/04/08/KAzHDWfFB8nmJMi.png" alt="image-20210407210955093"></p></li></ol><p>图15：PreTranslateMessage函数的部分代码<br>3. 鼠标操作：在“资源视图”打开游戏界面对话框，添加四个按钮，表示上下左右，并放置在合适位置，之后在其响应函数中写入相应程序；</p><p>   <img src="https://i.loli.net/2021/04/08/KAzHDWfFB8nmJMi.png" alt="image-20210407211002388"></p><p>图16：“↑”按钮响应函数</p><h4 id="3-5计算模块设计"><a href="#3-5计算模块设计" class="headerlink" title="3.5计算模块设计"></a>3.5计算模块设计</h4><p><img src="https://i.loli.net/2021/04/08/EpFkoZiGXCjy9aw.png" alt="image-20210407211013036"></p><ol><li><p>累加函数</p><p><img src="https://i.loli.net/2021/04/08/C5wxSceakURqQhT.png" alt="image-20210407211057117"></p></li></ol><p>图17：累加函数部分代码<br>2. 处理游戏结束：横轴.纵轴分别判断游戏是否能够继续进行。供其它操作函数调用；</p><p>   <img src="https://i.loli.net/2021/04/08/JRz4xsQOdaqC3ne.png" alt="image-20210407211106277"></p><p>图18：处理游戏结束函数部分代码<br>3. 上下左右计算：调用累加函数，循环输出后检测变动，判断此方向能否继续移动。若不能，则将对应按钮置灰。</p><p>   <img src="https://i.loli.net/2021/04/08/VKEBlRIca8zC4At.png" alt="image-20210407211114589"></p><p>图19：向上计算函数部分代码    </p><h4 id="3-6界面重置模块设计"><a href="#3-6界面重置模块设计" class="headerlink" title="3.6界面重置模块设计"></a>3.6界面重置模块设计</h4><p>被调用时，将界面清零，并随机生成数值，输出到游戏面盘。之后将游戏结束的信息记录在相应的数据文件内。</p><p>  <img src="https://i.loli.net/2021/04/08/z2DN1xPLCyucOn9.png" alt="image-20210407211236989">                             </p><p>图20：重置函数部分代码</p><h4 id="3-7文件写入模块设计"><a href="#3-7文件写入模块设计" class="headerlink" title="3.7文件写入模块设计"></a>3.7文件写入模块设计</h4><ol><li><p>使用CStdioFile标准库函数进行文件读写操作，供其它操作函数调用；</p></li><li><p>文件读取部分未集成未模块，相应代码在之后的排行榜及观看模块中均有体现；</p><p><img src="https://i.loli.net/2021/04/08/UZDxWSIbyfp9JQ3.png" alt="image-20210407211302714"></p></li></ol><p>图21：文件写入函数</p><h4 id="3-8排行榜模块设计"><a href="#3-8排行榜模块设计" class="headerlink" title="3.8排行榜模块设计"></a>3.8排行榜模块设计</h4><ol><li><p>创建用户类：其中MAX为用户得分，order为用户在数据文件中所处的位置；</p><p><img src="https://i.loli.net/2021/04/08/FdvGpPXzEwBJLyo.png" alt="image-20210407211327374"></p></li></ol><p>图22：用户类<br>2. 使用ReadString函数读取文件，用读取到的信息对用户类对象赋值，使用CArray标准库实现追加；</p><p>   <img src="https://i.loli.net/2021/04/08/opBqLC8A3D5vIfz.png" alt="image-20210407211333706"></p><p>图23：读取和追加部分代码<br>3. 使用交换排序算法对CArray类对象进行排序，并以一定格式输出到文本框控件；</p><p>   <img src="https://i.loli.net/2021/04/08/FyaLfvUZEhSTKdB.png" alt="image-20210407211342524"></p><p>图24：排序与输出功能代码</p><h4 id="3-9观看模块设计"><a href="#3-9观看模块设计" class="headerlink" title="3.9观看模块设计"></a>3.9观看模块设计</h4><ol><li><p>在“资源视图”，放置下拉文本框控件在游戏界面，并添加“观看”按钮；</p><p><img src="https://i.loli.net/2021/04/08/8EWoucszJD1ZvGq.png" alt="image-20210407211419417"></p></li></ol><p>图25：观看功能相关控件<br>2. 当玩家按下“观看”按钮时，其响应函数被调用，将布尔型全局变量wop变为FALSE，开启“观看模式”。此时，倒计时停止，玩家操作鼠标或键盘将无效。同时，调用DoModal函数，弹出播放速度选择对话框；</p><p>   <img src="https://i.loli.net/2021/04/08/PQFDMitOLH6NxuG.png" alt="image-20210407211427250"></p><p>图26：“观看”按钮响应函数部分代码</p><p><img src="https://i.loli.net/2021/04/08/rNUjkeoIB4tEDVh.png" alt="image-20210407211433715"></p><p>图27：播放速度选择界面<br>3.    根据用户在文本框内所选的玩家信息，在操作数据文件中根据玩家的order成员变量寻找该玩家，找到后将记录的操作信息依次输出至游戏面盘。<br>4.    输出结束后，将变量wop变为TRUE，关闭“观看模式”，玩家继续游戏。</p><h4 id="3-10退出登录模块设计"><a href="#3-10退出登录模块设计" class="headerlink" title="3.10退出登录模块设计"></a>3.10退出登录模块设计</h4><p>用户点击“退出登陆”按钮时，调用EndDialog函数，关闭游戏界面。之后调用DoModal函数，生成新的欢迎界面。</p><h3 id="4-运行结果与分析"><a href="#4-运行结果与分析" class="headerlink" title="4.运行结果与分析"></a>4.运行结果与分析</h3><h4 id="4-1-用户登录功能"><a href="#4-1-用户登录功能" class="headerlink" title="4.1 用户登录功能"></a>4.1 用户登录功能</h4><p><img src="https://i.loli.net/2021/04/08/VfGsPLeHUmOinrX.png" alt="image-20210407211514579"></p><p>图28：用户登录界面</p><h4 id="4-2-基础功能（游戏功能）"><a href="#4-2-基础功能（游戏功能）" class="headerlink" title="4.2 基础功能（游戏功能）"></a>4.2 基础功能（游戏功能）</h4><p>​                               <img src="https://i.loli.net/2021/04/08/zMm1PgdJ6CpnlKo.png" alt="image-20210407211538492"></p><p>图29：鼠标与键盘操作游戏</p><p> <img src="https://i.loli.net/2021/04/08/zak6KJI8CEp1Sjw.png" alt="image-20210407211544421"></p><p>图30：当一个方向无法移动时，按钮置灰</p><p> <img src="https://i.loli.net/2021/04/08/4GrR8ad5CQEviuf.png" alt="image-20210407211549984"></p><p>图31：当所有方向都无法移动时，游戏结束</p><h4 id="4-3当前时间显示功能"><a href="#4-3当前时间显示功能" class="headerlink" title="4.3当前时间显示功能"></a>4.3当前时间显示功能</h4><p><img src="https://i.loli.net/2021/04/08/vEOWPoUg6lxHGh4.png" alt="image-20210407211612733"></p><p>图32：显示当前日期与时间</p><h4 id="4-4登录信息及实时操作显示功能"><a href="#4-4登录信息及实时操作显示功能" class="headerlink" title="4.4登录信息及实时操作显示功能"></a>4.4登录信息及实时操作显示功能</h4><p><img src="https://i.loli.net/2021/04/08/xlwyFGfXI2t9LRa.png" alt="image-20210407211635812"></p><p>图33：显示玩家登录信息及操作</p><h4 id="4-5排行榜功能"><a href="#4-5排行榜功能" class="headerlink" title="4.5排行榜功能"></a>4.5排行榜功能</h4><p><img src="https://i.loli.net/2021/04/08/Qypb6kBVlgGNwnh.png" alt="image-20210407211649803"></p><p>图34：对所有玩家进行排序（最多显示TOP15）</p><h4 id="4-6观看功能"><a href="#4-6观看功能" class="headerlink" title="4.6观看功能"></a>4.6观看功能</h4><p><img src="https://i.loli.net/2021/04/08/jUfS6vYlCDkNAMJ.png" alt="image-20210407211658280"></p><p>图35：下拉文本框与“观看”按键</p><p><img src="https://i.loli.net/2021/04/08/qwfRIFWjBQ9Yd6O.png" alt="image-20210407211729265"></p><p>图36：播放速度选择对话框</p><p><img src="https://i.loli.net/2021/04/08/ABDxtvT9gkbMz34.png" alt="image-20210407211734856"></p><p>图37：正在观看中</p><h4 id="4-7名人名言显示功能"><a href="#4-7名人名言显示功能" class="headerlink" title="4.7名人名言显示功能"></a>4.7名人名言显示功能</h4><p><img src="https://i.loli.net/2021/04/08/9MBoFQhCJpij7XS.png" alt="image-20210407211750332"></p><p>图38：文本框内滚动显示名人名言</p><h4 id="4-8背景音乐功能"><a href="#4-8背景音乐功能" class="headerlink" title="4.8背景音乐功能"></a>4.8背景音乐功能</h4><p>经测试游戏运行中有背景音乐播放</p><h4 id="4-9退出登录功能"><a href="#4-9退出登录功能" class="headerlink" title="4.9退出登录功能"></a>4.9退出登录功能</h4><p><img src="https://i.loli.net/2021/04/08/TGyOLDJHksNSCuM.png" alt="image-20210407211815174"></p><p>图39：点击“退出登录”后返回欢迎界面</p><h2 id="二、问题解决"><a href="#二、问题解决" class="headerlink" title="二、问题解决"></a>二、问题解决</h2><h4 id="（1）在程序设计过程中，你是否通过自定义类对某些功能进行了封装？这些类主要的功能是什么？"><a href="#（1）在程序设计过程中，你是否通过自定义类对某些功能进行了封装？这些类主要的功能是什么？" class="headerlink" title="（1）在程序设计过程中，你是否通过自定义类对某些功能进行了封装？这些类主要的功能是什么？"></a>（1）在程序设计过程中，你是否通过自定义类对某些功能进行了封装？这些类主要的功能是什么？</h4><p>答：①usr类：表示一个用户的类。成员变量：name——用户名；MAX——得分；order——用户信息在数据文件中的位置。<br>②RandonNum成员函数：无形参，无返回值。随机生成数字2或4，并将其放在游戏面盘的随机位置。<br>③CalcEnd成员函数：无形参，返回BOOL型。判断横轴与纵轴能否继续移动。若能移动，则继续游戏；否则，游戏结束。<br>④reALLBUTTON成员函数：无形参，无返回值。重置四个方向按钮。<br>⑤WriteTXT成员函数：形参CString型，无返回值。向指定文件写入字符串。<br>⑥TravelArrey成员函数：无形参，返回CString型。遍历游戏面盘，并将数据以CString类型返回。<br>⑦TOPList成员函数：无形参，无返回值。将排行榜功能所需的遍历.排序以及输出集成在此函数中。<br>⑧watch成员函数：形参int型，无返回值。完成观看功能，包括查找.遍历.文件读取以及输出。</p><h4 id="（2）小结上机各个环节所出现的错误及解决的办法。"><a href="#（2）小结上机各个环节所出现的错误及解决的办法。" class="headerlink" title="（2）小结上机各个环节所出现的错误及解决的办法。"></a>（2）小结上机各个环节所出现的错误及解决的办法。</h4><p>答：<br><strong>错误一</strong>：定时器相关函数不被执行。<br>解决方法：通过手动输入的配置定时器的代码，即使内容一致，也无法运行。应该通过类向导，加入定时器的消息映射WM_TIMER，程序在执行定时器相关函数。<br><strong>错误二</strong>：调用CString类的Format函数时，报错“没有与参数列表匹配的重载函数”。<br>解决方法：Format函数的形参之一为LPCWSTR类型变量，与字符串的char类型不相符。因此将需要格式化的字符串通过_T函数转换。<br><strong>错误三</strong>：点击“观看”按钮后，本应弹出选择播放速度对话框，但实际情况为界面卡死，无法操作。<br>解决方法：在资源视图中打开要弹出的对话框，将属性中的Visable选项更改为TRUE即可。</p><h2 id="三、主要代码"><a href="#三、主要代码" class="headerlink" title="三、主要代码"></a>三、主要代码</h2><h3 id="1-登陆函数"><a href="#1-登陆函数" class="headerlink" title="1.登陆函数"></a>1.登陆函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CStartDlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">OnBnClickedStartButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    CString str<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//BOOL c;</span>    <span class="token comment" spellcheck="true">//EndDialog(IDD_START_DIALOG);</span>    CMy2048Dlg dlg<span class="token punctuation">;</span>    <span class="token function">GetDlgItem</span><span class="token punctuation">(</span>IDC_EDIT1<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetWindowText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//CEdit1.GetWindowText();</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">!=</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断用户是否输入</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">EndDialog</span><span class="token punctuation">(</span>IDD_START_DIALOG<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//关闭登陆界面</span>            dlg<span class="token punctuation">.</span>Userr<span class="token punctuation">.</span>name <span class="token operator">=</span> str<span class="token punctuation">;</span>            dlg<span class="token punctuation">.</span><span class="token function">DoModal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//调出游戏界面</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">AfxMessageBox</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"请输入用户名"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//提醒用户重新输入</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="2-OnPaint函数"><a href="#2-OnPaint函数" class="headerlink" title="2.OnPaint函数"></a>2.OnPaint函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">OnPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsIconic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        CPaintDC <span class="token function">dc</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 用于绘制的设备上下文</span>        <span class="token function">SendMessage</span><span class="token punctuation">(</span>WM_ICONERASEBKGND<span class="token punctuation">,</span> reinterpret_cast<span class="token operator">&lt;</span>WPARAM<span class="token operator">></span><span class="token punctuation">(</span>dc<span class="token punctuation">.</span><span class="token function">GetSafeHdc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 使图标在工作区矩形中居中</span>        <span class="token keyword">int</span> cxIcon <span class="token operator">=</span> <span class="token function">GetSystemMetrics</span><span class="token punctuation">(</span>SM_CXICON<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> cyIcon <span class="token operator">=</span> <span class="token function">GetSystemMetrics</span><span class="token punctuation">(</span>SM_CYICON<span class="token punctuation">)</span><span class="token punctuation">;</span>        CRect rect<span class="token punctuation">;</span>        <span class="token function">GetClientRect</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token punctuation">(</span>rect<span class="token punctuation">.</span><span class="token function">Width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> cxIcon <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token punctuation">(</span>rect<span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> cyIcon <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 绘制图标</span>        dc<span class="token punctuation">.</span><span class="token function">DrawIcon</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> m_hIcon<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token comment" spellcheck="true">//初始化游戏面盘</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        CRect   <span class="token function">temprect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        CWnd<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">SetWindowPos</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> temprect<span class="token punctuation">.</span><span class="token function">Width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> temprect<span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> SWP_NOZORDER <span class="token operator">|</span> SWP_NOMOVE<span class="token punctuation">)</span><span class="token punctuation">;</span>        CPaintDC <span class="token function">dc</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">GetClientRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>        dc<span class="token punctuation">.</span><span class="token function">FillSolidRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token function">RGB</span><span class="token punctuation">(</span><span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置背景颜色</span>        <span class="token function">GetClientRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取窗口客户区的坐标 客户区坐标是相对窗口客户区的左上角而言的，因此左上角坐标为（0，0）。</span>        rect<span class="token punctuation">.</span>left   <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        rect<span class="token punctuation">.</span>right  <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        rect<span class="token punctuation">.</span>top    <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        rect<span class="token punctuation">.</span>bottom <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        CRgn rgn<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//圆角</span>        CRect rc<span class="token punctuation">;</span>        <span class="token function">GetWindowRect</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获得窗口矩形</span>        rc <span class="token operator">-</span><span class="token operator">=</span> rc<span class="token punctuation">.</span><span class="token function">TopLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        rgn<span class="token punctuation">.</span><span class="token function">CreateRoundRectRgn</span><span class="token punctuation">(</span>rc<span class="token punctuation">.</span>left<span class="token punctuation">,</span> rc<span class="token punctuation">.</span>top<span class="token punctuation">,</span> rc<span class="token punctuation">.</span>right<span class="token punctuation">,</span> rc<span class="token punctuation">.</span>bottom<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//根据窗口矩形创建一个圆角矩形最后两个是形成圆角的大小</span>        <span class="token function">SetWindowRgn</span><span class="token punctuation">(</span>rgn<span class="token punctuation">,</span> TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> nWidth  <span class="token operator">=</span> rect<span class="token punctuation">.</span><span class="token function">Width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token punctuation">(</span>Count<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//每个单元格的宽度</span>        <span class="token keyword">int</span> nHeight <span class="token operator">=</span> rect<span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>Count<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//每个单元格的高度</span>        CFont font<span class="token punctuation">;</span>        font<span class="token punctuation">.</span><span class="token function">CreatePointFont</span><span class="token punctuation">(</span>nHeight<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"Small Fonts"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>dc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//创建字体和大小</span>        CFont<span class="token operator">*</span> oldFont <span class="token operator">=</span> dc<span class="token punctuation">.</span><span class="token function">SelectObject</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//保存旧的字体</span>        dc<span class="token punctuation">.</span><span class="token function">SetBkMode</span><span class="token punctuation">(</span>TRANSPARENT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置背景颜色为透明</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                CRect rectChild<span class="token punctuation">;</span>                rectChild<span class="token punctuation">.</span>left   <span class="token operator">=</span> rect<span class="token punctuation">.</span>left <span class="token operator">+</span> j<span class="token operator">*</span>nWidth<span class="token operator">+</span> nWidth<span class="token punctuation">;</span>                rectChild<span class="token punctuation">.</span>top    <span class="token operator">=</span> rect<span class="token punctuation">.</span>top  <span class="token operator">+</span> i<span class="token operator">*</span>nHeight<span class="token operator">+</span> nHeight<span class="token punctuation">;</span>                rectChild<span class="token punctuation">.</span>right  <span class="token operator">=</span> rectChild<span class="token punctuation">.</span>left <span class="token operator">+</span> nWidth<span class="token punctuation">;</span>                rectChild<span class="token punctuation">.</span>bottom <span class="token operator">=</span> rectChild<span class="token punctuation">.</span>top  <span class="token operator">+</span> nHeight<span class="token punctuation">;</span>                dc<span class="token punctuation">.</span><span class="token function">Draw3dRect</span><span class="token punctuation">(</span>rectChild<span class="token punctuation">,</span><span class="token function">RGB</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">RGB</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>wop<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        CString  strText<span class="token punctuation">;</span>                        strText<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//函数功能是在指定的矩形里写入格式化文本，根据指定的方法对文本格式化</span>                        <span class="token comment" spellcheck="true">//（扩展的制表符，字符对齐、折行等）</span>                        dc<span class="token punctuation">.</span><span class="token function">DrawText</span><span class="token punctuation">(</span>strText<span class="token punctuation">,</span> rectChild<span class="token punctuation">,</span> DT_CENTER <span class="token operator">|</span> DT_VCENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>wop<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>n_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        CString  strText<span class="token punctuation">;</span>                        strText<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">//该函数的功能是在指定的矩形里写入格式化文本，根据指定的方法对文本格式化</span>                        <span class="token comment" spellcheck="true">//（扩展的制表符，字符对齐、折行等）</span>                        dc<span class="token punctuation">.</span><span class="token function">DrawText</span><span class="token punctuation">(</span>strText<span class="token punctuation">,</span> rectChild<span class="token punctuation">,</span> DT_CENTER <span class="token operator">|</span> DT_VCENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        CDialogEx<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">OnPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dc<span class="token punctuation">.</span><span class="token function">SelectObject</span><span class="token punctuation">(</span>oldFont<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//选则回原来的字体</span>        font<span class="token punctuation">.</span><span class="token function">DeleteObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//删除字体</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="3-重置界面函数"><a href="#3-重置界面函数" class="headerlink" title="3.重置界面函数"></a>3.重置界面函数</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">//重置，重新开始界面初始化</span><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">Reset</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//int buff[4][4];</span>    <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    ct <span class="token operator">=</span> COUNT<span class="token punctuation">;</span>    <span class="token function">RandonNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">RandonNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    CString strrrr<span class="token punctuation">;</span>    strrrr<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"u_%s\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Userr<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">WriteNameTXT</span><span class="token punctuation">(</span>strrrr<span class="token punctuation">)</span><span class="token punctuation">;</span>    strrrr<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"L_%s\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Userr<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">WriteTXT</span><span class="token punctuation">(</span>strrrr<span class="token punctuation">)</span><span class="token punctuation">;</span>    CString strr<span class="token punctuation">;</span>    strr <span class="token operator">=</span> <span class="token function">TravelArrey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">WriteTXT</span><span class="token punctuation">(</span>strr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="4-向下运算函数"><a href="#4-向下运算函数" class="headerlink" title="4.向下运算函数"></a>4.向下运算函数</h3><pre class=" language-c"><code class="language-c">bool CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">Down</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>wop<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> tempArray<span class="token punctuation">[</span>Count<span class="token punctuation">]</span><span class="token punctuation">[</span>Count<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">memcpy</span><span class="token punctuation">(</span>tempArray<span class="token punctuation">,</span> m_nArray<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">*</span>Count<span class="token operator">*</span>Count<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">reALLBUTTON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    deque<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> lst<span class="token punctuation">[</span>Count<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//声明一个deque&lt;int>类型的数组 数组长度为4，也就是4个deque&lt;int></span>    <span class="token comment" spellcheck="true">//分组</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                lst<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_front</span><span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//累加</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">Add</span><span class="token punctuation">(</span>lst<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这里假设对于 lst[0];相加后为： lst[0][0]: 4; lst[0][1]:2;没有变化这种情况</span><span class="token comment" spellcheck="true">//因为相加的时候是 以lst[0][0], lst[1][0]为基准，所以这里向下相加后，就要反转一下</span>        <span class="token function">ReservedLst</span><span class="token punctuation">(</span>lst<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//重新赋值</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> lst<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//注意这里是 lst[j][i] 赋值给 m_nArray[i][j]</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//检测变动</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> tempArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> true<span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token function">GetDlgItem</span><span class="token punctuation">(</span>IDC_BUTTON4<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">EnableWindow</span><span class="token punctuation">(</span>FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> false<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">return</span> TRUE<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="5-游戏结束函数"><a href="#5-游戏结束函数" class="headerlink" title="5.游戏结束函数"></a>5.游戏结束函数</h3><pre class=" language-c"><code class="language-c">bool CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">CalcEnd</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>wop<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//首先处理横轴：</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> false<span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">==</span> Count<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断是否可以累加</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> false<span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//处理纵轴</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> false<span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">==</span> Count<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> m_nArray<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> false<span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> true<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">return</span> false<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="6-累加函数"><a href="#6-累加函数" class="headerlink" title="6.累加函数"></a>6.累加函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">Add</span><span class="token punctuation">(</span> deque<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token operator">&amp;</span>list<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>wop<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> list<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span><span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>                    list<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果当前的值不为0  跳出内循环，没必要再比较例如：  4 2 2 ； 当 list[0]=4,list[1]=2list[1] = 2 != 0,直接跳出循环，没必要再比较 list[2]与 list[0]</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//重新排列顺序，不足补0；</span>        <span class="token comment" spellcheck="true">//例如 4 2  经过上面的代码其实没有任何变化累加，但是累加最后的结果要变为  4 2 0 0  </span>        deque<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> tempLst<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//双端队列支持对元素的下标访问</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                tempLst<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        list <span class="token operator">=</span> tempLst<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这个时候 list的元素为： 4 2 ，所以下面要补0</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            list<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//list 的元素为： 4 2 0 0 </span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="7-向上按钮响应函数"><a href="#7-向上按钮响应函数" class="headerlink" title="7.向上按钮响应函数"></a>7.向上按钮响应函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">OnBnClickedButton2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// TODO: 在此添加控件通知处理程序代码</span>    <span class="token comment" spellcheck="true">//sign = 1;</span>    CString str<span class="token punctuation">;</span>    bool bRet<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>wop<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        List1<span class="token punctuation">.</span><span class="token function">AddString</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"↑"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        CString strr<span class="token punctuation">;</span>        strr <span class="token operator">=</span> <span class="token function">TravelArrey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">WriteTXT</span><span class="token punctuation">(</span>strr<span class="token punctuation">)</span><span class="token punctuation">;</span>        bRet <span class="token operator">=</span> <span class="token function">Up</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">TOPControl</span><span class="token punctuation">(</span>bRet<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="8-TOPControl函数"><a href="#8-TOPControl函数" class="headerlink" title="8.TOPControl函数"></a>8.TOPControl函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">TOPControl</span><span class="token punctuation">(</span>bool n<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">CalcEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断游戏是否结束</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">AfxMessageBox</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"GameOver!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>List1<span class="token punctuation">.</span><span class="token function">AddString</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"GameOver!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//List1.AddString(_T("GameOver!"));</span>        <span class="token keyword">int</span> buff<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//遍历找出最大值并输出</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> max<span class="token punctuation">)</span>                    max <span class="token operator">=</span> buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        CString st<span class="token punctuation">;</span>        st<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"m_%d\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">WriteNameTXT</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记录游戏信息</span>        CString strrr<span class="token punctuation">;</span>        strrr<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"O_%s\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Userr<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">WriteTXT</span><span class="token punctuation">(</span>strrr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">Reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//重置游戏</span>        <span class="token function">TOPList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//排行榜函数</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">RandonNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Invalidate</span><span class="token punctuation">(</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">CalcEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token function">AfxMessageBox</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"GameOver!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>List1<span class="token punctuation">.</span><span class="token function">AddString</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"GameOver!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> buff<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//遍历找出最大值并输出</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> max<span class="token punctuation">)</span>                            max <span class="token operator">=</span> buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                CString st<span class="token punctuation">;</span>                st<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"m_%d\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">WriteNameTXT</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">;</span>                CString strrr<span class="token punctuation">;</span>                strrr<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"O_%s\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Userr<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">WriteTXT</span><span class="token punctuation">(</span>strrr<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">Reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">TOPList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token function">Invalidate</span><span class="token punctuation">(</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="9-定时器相关函数"><a href="#9-定时器相关函数" class="headerlink" title="9.定时器相关函数"></a>9.定时器相关函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">OnTimer</span><span class="token punctuation">(</span>UINT_PTR nIDEvent<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>nIDEvent<span class="token operator">==</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>wop<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断事件来自哪个定时器</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// TODO: 在此添加消息处理程序代码和/或调用默认值</span>        <span class="token comment" spellcheck="true">//sign2 = 0;</span>        CString str<span class="token punctuation">,</span> str1<span class="token punctuation">,</span> str2<span class="token punctuation">,</span> str3<span class="token punctuation">;</span>        <span class="token keyword">int</span> Minute<span class="token punctuation">,</span> Second<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//分，秒</span>        Minute <span class="token operator">=</span> ct <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//分</span>        Second <span class="token operator">=</span> ct <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//秒</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Second <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            Second <span class="token operator">=</span> <span class="token number">59</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>Minute <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>                Minute <span class="token operator">=</span> Minute <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            Second <span class="token operator">=</span> Second <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//自减1倒计时</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Second <span class="token operator">>=</span> <span class="token number">10</span><span class="token punctuation">)</span>            str2<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"%d:%d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Minute<span class="token punctuation">,</span> Second<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            str2<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"%d:0%d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Minute<span class="token punctuation">,</span> Second<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//str2.Format(_T("%d"), Second);</span>        <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT2<span class="token punctuation">,</span> str2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Minute <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> Second <span class="token operator">==</span> <span class="token number">0</span><span class="token operator">&amp;&amp;</span>sign2<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            sign2<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//AfxMessageBox(_T("GameOver!"));</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">MessageBox</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"Game Over!"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"时间到"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                sign2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                List1<span class="token punctuation">.</span><span class="token function">AddString</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"GameOver!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token keyword">int</span> buff<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//遍历找出最大值并输出</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> m_nArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> max<span class="token punctuation">)</span>                            max <span class="token operator">=</span> buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                CString st<span class="token punctuation">;</span>                st<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"m_%d\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">WriteNameTXT</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">Invalidate</span><span class="token punctuation">(</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>                CString strrr<span class="token punctuation">;</span>                strrr<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"O_%s\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Userr<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">WriteTXT</span><span class="token punctuation">(</span>strrr<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">Reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//此处修改只显示一次</span>                                <span class="token function">TOPList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Minute <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> Second <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> sign2 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            sign2<span class="token operator">++</span><span class="token punctuation">;</span>            ct <span class="token operator">=</span> COUNT<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        ct <span class="token operator">=</span> ct <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        CTime tm <span class="token operator">=</span> CTime<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">GetCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        str3<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"%d-%02d-%02d  %02d:%02d:%02d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">.</span><span class="token function">GetYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">.</span><span class="token function">GetMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">.</span><span class="token function">GetDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">.</span><span class="token function">GetHour</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">.</span><span class="token function">GetMinute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">.</span><span class="token function">GetSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">GetDlgItem</span><span class="token punctuation">(</span>IDC_EDIT1<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">EnableWindow</span><span class="token punctuation">(</span>FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">GetDlgItem</span><span class="token punctuation">(</span>IDC_EDIT1<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">SetWindowText</span><span class="token punctuation">(</span>str3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nIDEvent <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        CString str<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>sign <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span> sign <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> sign<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>sign<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//选择要显示的名人名言</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word1<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word2<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word3<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word4<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word5<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">6</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word6<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">7</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word7<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">8</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word8<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">9</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word9<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">10</span><span class="token punctuation">:</span>            str <span class="token operator">=</span> word10<span class="token punctuation">;</span>            <span class="token function">SetDlgItemText</span><span class="token punctuation">(</span>IDC_EDIT3<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    CDialogEx<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">OnTimer</span><span class="token punctuation">(</span>nIDEvent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="10-排行榜函数"><a href="#10-排行榜函数" class="headerlink" title="10.排行榜函数"></a>10.排行榜函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">TOPList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    CString cstrFileFullPath <span class="token operator">=</span> <span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\11817\\Desktop\\计算机大实验\\2048demo\\name.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    USES_CONVERSION<span class="token punctuation">;</span>    CStdioFile cssFile<span class="token punctuation">;</span>    CString cstrLine<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//usr *u = new usr;</span>    u<span class="token punctuation">.</span><span class="token function">RemoveAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> z<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    BOOL ret <span class="token operator">=</span> cssFile<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>cstrFileFullPath<span class="token punctuation">,</span>        CFile<span class="token punctuation">:</span><span class="token punctuation">:</span>modeRead <span class="token operator">|</span> CFile<span class="token punctuation">:</span><span class="token punctuation">:</span>shareDenyNone<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ret<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">AfxMessageBox</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"读取文件失败"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    cssFile<span class="token punctuation">.</span><span class="token function">SeekToBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>cssFile<span class="token punctuation">.</span><span class="token function">ReadString</span><span class="token punctuation">(</span>cstrLine<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//z++;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cstrLine<span class="token operator">==</span><span class="token string">"u_"</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cstrLine <span class="token operator">!=</span> <span class="token string">"u_"</span> <span class="token operator">&amp;&amp;</span> cstrLine<span class="token punctuation">.</span><span class="token function">GetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">'u'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//查找用户名关键字</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            usr temp<span class="token punctuation">;</span>            <span class="token keyword">int</span> l<span class="token operator">=</span>cstrLine<span class="token punctuation">.</span><span class="token function">GetLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            CString ste<span class="token operator">=</span> cstrLine<span class="token punctuation">.</span><span class="token function">Right</span><span class="token punctuation">(</span>l<span class="token number">-2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//ste.Format(_T("%s"),)</span>            temp<span class="token punctuation">.</span>name <span class="token operator">=</span> ste<span class="token punctuation">;</span>            temp<span class="token punctuation">.</span>order <span class="token operator">=</span> z<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>            u<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//u = new usr;</span>            <span class="token comment" spellcheck="true">//u[z].name = cstrLine;</span>            z<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//countt++;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cstrLine <span class="token operator">!=</span> <span class="token string">"u_"</span> <span class="token operator">&amp;&amp;</span>cstrLine<span class="token punctuation">.</span><span class="token function">GetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'m'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//查找成绩关键字</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> i<span class="token punctuation">,</span>k<span class="token punctuation">,</span>l<span class="token punctuation">;</span>            <span class="token keyword">char</span> s<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>            l <span class="token operator">=</span> cstrLine<span class="token punctuation">.</span><span class="token function">GetLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>l<span class="token number">-2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">char</span> y<span class="token punctuation">;</span>                 y<span class="token operator">=</span> cstrLine<span class="token punctuation">.</span><span class="token function">GetAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> y<span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//s.Add( '\0');             </span>            k <span class="token operator">=</span> <span class="token function">atoi</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>            u<span class="token punctuation">[</span>z<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>MAX <span class="token operator">=</span> k<span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    usr max<span class="token punctuation">;</span>    <span class="token keyword">int</span> tempmax <span class="token operator">=</span> z <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//交换排序</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span>z<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> z<span class="token number">-1</span><span class="token punctuation">;</span> j <span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>MAX <span class="token operator">&lt;=</span> u<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>MAX<span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                max <span class="token operator">=</span> u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                u<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> u<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                u<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> max<span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    List2<span class="token punctuation">.</span><span class="token function">ResetContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    TOPu<span class="token punctuation">.</span><span class="token function">RemoveAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清空排序记录</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>v<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>z<span class="token number">-1</span><span class="token operator">&amp;&amp;</span>v<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span>i<span class="token operator">++</span> <span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        CString str<span class="token punctuation">,</span>str2<span class="token punctuation">;</span>        str2<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"|分数："</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>MAX <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            usr temp<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                str<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"第%d名：%-8s%s%-4d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> str2<span class="token punctuation">,</span> u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>MAX<span class="token punctuation">)</span><span class="token punctuation">;</span>                List2<span class="token punctuation">.</span><span class="token function">AddString</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出至列表</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            temp <span class="token operator">=</span> u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            TOPu<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>            v<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="11-回放函数"><a href="#11-回放函数" class="headerlink" title="11.回放函数"></a>11.回放函数</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> CMy2048Dlg<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> s<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//TOPu[x];</span>    CPaintDC <span class="token function">dc</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    CString cstrFileFullPath <span class="token operator">=</span> <span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\11817\\Desktop\\计算机大实验\\2048demo\\data.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    USES_CONVERSION<span class="token punctuation">;</span>    CStdioFile cssFile<span class="token punctuation">;</span>    CString cstrLine<span class="token punctuation">;</span>    BOOL ret <span class="token operator">=</span> cssFile<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>cstrFileFullPath<span class="token punctuation">,</span>        CFile<span class="token punctuation">:</span><span class="token punctuation">:</span>modeRead <span class="token operator">|</span> CFile<span class="token punctuation">:</span><span class="token punctuation">:</span>shareDenyNone<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ret<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">AfxMessageBox</span><span class="token punctuation">(</span><span class="token function">_T</span><span class="token punctuation">(</span><span class="token string">"读取文件失败"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    cssFile<span class="token punctuation">.</span><span class="token function">SeekToBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>cssFile<span class="token punctuation">.</span><span class="token function">ReadString</span><span class="token punctuation">(</span>cstrLine<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> u<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cstrLine<span class="token punctuation">.</span><span class="token function">GetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'L'</span><span class="token punctuation">)</span>            y<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">==</span> TOPu<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span>order<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            u <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/*CString stt;            stt.Format(_T("%s"), TOPu[x].name);            SetDlgItemText(IDC_EDIT4, stt);*/</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>cssFile<span class="token punctuation">.</span><span class="token function">ReadString</span><span class="token punctuation">(</span>cstrLine<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> cstrLine<span class="token punctuation">.</span><span class="token function">GetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">'O'</span><span class="token operator">&amp;&amp;</span>cstrLine<span class="token punctuation">.</span><span class="token function">GetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">'L'</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> h <span class="token operator">&lt;</span> Count<span class="token punctuation">;</span> h<span class="token operator">++</span><span class="token punctuation">)</span>                        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                            CString temp<span class="token punctuation">;</span> <span class="token keyword">char</span> <span class="token operator">*</span>temps<span class="token punctuation">;</span>                            temp <span class="token operator">=</span> cstrLine<span class="token punctuation">.</span><span class="token function">Mid</span><span class="token punctuation">(</span><span class="token number">25</span> <span class="token operator">*</span> j <span class="token operator">+</span> <span class="token number">5</span> <span class="token operator">*</span> h<span class="token punctuation">,</span> <span class="token number">25</span> <span class="token operator">*</span> j <span class="token operator">+</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>h <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            temps <span class="token operator">=</span> <span class="token function">W2A</span><span class="token punctuation">(</span>temp<span class="token punctuation">.</span><span class="token function">GetBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">int</span> m<span class="token operator">=</span><span class="token function">atoi</span><span class="token punctuation">(</span>temps<span class="token punctuation">)</span><span class="token punctuation">;</span>                            n_nArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>h<span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">;</span>                        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                    <span class="token function">Invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">XSleep</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//延时300ms</span>                    <span class="token comment" spellcheck="true">//List1.AddString(_T("*"));</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token keyword">else</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    wop <span class="token operator">=</span> TRUE<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MFC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2048 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2048Start</title>
      <link href="2021/04/07/2048start/"/>
      <url>2021/04/07/2048start/</url>
      
        <content type="html"><![CDATA[<h1 id="2048游戏"><a href="#2048游戏" class="headerlink" title="2048游戏"></a>2048游戏</h1><h2 id="设计目标"><a href="#设计目标" class="headerlink" title="设计目标"></a>设计目标</h2><h3 id="基本目标："><a href="#基本目标：" class="headerlink" title="基本目标："></a>基本目标：</h3><pre class=" language-bash"><code class="language-bash">    1. 布设游戏的场景；    2. 管理游戏的玩家,包括记录并显示玩家的用户名、实时排名以及得分，游戏过程中的记录信息包括玩家操作等；            3. 按规则执行游戏过程，判定游戏胜利；    4. 记录游戏过程包括玩家操作以及每一步操作的结果，并可以通过图形界面演示重现；    5. 游戏规则：每次可以选择上下左右其中一个方向去滑动，每滑动一次，所有的数字方块都会往滑动的方向靠拢外，系统也会在空白的地方乱数出现一个数字方块，相同数字的方块在靠拢、相撞时会相加。系统给予的数字方块不是2就是4，玩家要想办法在这小小的16格范围中凑出“2048”这个数字方块；矩阵的四周有四个按钮，分别表示向左、向右、向上、向下移动。当某一方向无法移动时，该按钮应该被隐藏（变灰）。</code></pre><h3 id="拓展目标："><a href="#拓展目标：" class="headerlink" title="拓展目标："></a>拓展目标：</h3><pre class=" language-bash"><code class="language-bash">    1. 限定游戏时间：在游戏界面添加倒计时，并设计倒计时程序。当计时到时游戏结束并重置界面；    2. 添加背景音乐；    3. 增加滚动字幕，字幕内容为为一些名人名言，提升游戏过程中的趣味性；    4. 在演示玩家操作时，用户可选择演示播放速度，以满足用户的不同需求；    5. 实现数据可迁移，方便用户在不同PC设备上使用；    6. 添加用户登录界面，方便对玩家的管理；    7. 在游戏界面添加时间日期显示，显示当前的日期和时间；    8. 添加键盘控制功能，玩家可以通过键盘控制界面上下左右操作。</code></pre><h2 id="相关知识情况"><a href="#相关知识情况" class="headerlink" title="相关知识情况"></a>相关知识情况</h2><h3 id="所预见的技术"><a href="#所预见的技术" class="headerlink" title="所预见的技术"></a>所预见的技术</h3><pre class=" language-bash"><code class="language-bash">    1. 对话框/SDI程序架构的生成；    2. 绘制不同颜色和线形的曲线；    3. 配置界面字体大小、颜色、类型；    4. 对话框添加控件资源并配置其大小、颜色、背景、字体等等；    5. 定时器配置（消息映射）；    6. 各种控件的操作函数；    7. 文件读写操作；    8. MFC标准类的基本使用方法；    9. 排序及查找算法。</code></pre><h3 id="所掌握的技术"><a href="#所掌握的技术" class="headerlink" title="所掌握的技术"></a>所掌握的技术</h3><pre class=" language-bash"><code class="language-bash">    1. 对话框添加控件资源并配置其大小、颜色、背景、字体等等；    2. 文件读写操作；    3. 排序及查找算法</code></pre><h3 id="需要后续获取的技术"><a href="#需要后续获取的技术" class="headerlink" title="需要后续获取的技术"></a>需要后续获取的技术</h3><pre class=" language-bash"><code class="language-bash">    1. 对话框/SDI程序架构的生成；    2. 绘制不同颜色和线形的曲线；    3. 配置界面字体大小、颜色、类型；    4. 定时器配置（消息映射）；    5. 各种控件的操作函数；    6. MFC标准类的基本使用方法。</code></pre><h2 id="进度计划"><a href="#进度计划" class="headerlink" title="进度计划"></a>进度计划</h2><pre class=" language-bash"><code class="language-bash">    第1天    需求分析            第2天    总体方案设计            第3-5天    关键组件、模块的使用与设计            第6-8天    模块连接与调试            第9-10天    答辩汇报，整理报告</code></pre><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] 侯俊杰. 深入浅出MFC[M]. 武汉:华中科技大学出版社, 2001.</p><p>[2] 郑阿奇,丁有和. Visual C++教程[M]. 北京:清华大学出版社, 2016.</p><p>[3] 陈国建. Visual C++宝典[M].北京:电子工业出版社, 2011.</p><p>[4] 张力. Visual C++ 高级编程[M].北京:人民邮电出版社, 2002.</p><p>[5] 王洪涛. 深入剖析Visual C++编程技术及应用实例[M].北京:人民邮电出版社, 2003.</p><p>[6] Jeff Prosise. MFC Windows程序设计（第2版）[M].北京:清华大学出版社，2000.</p><p>[7] Stephen Prata. C++ Primer Plus 第6版[M].北京:人民邮电出版社.2020.</p><p>[8] 谭浩强. C++面向对象程序设计（第2版）[M].北京:清华大学出版社.2014.</p><p>[9] )萨尼. 数据结构、算法与应用 C++语言描述（原书第2版）[M].北京:机械工业出版社.2015.</p><p>[10] Mark Allen Weiss .数据结构与算法分析——C++语言描述（第四版）[M].北京:电子工业出版社.2016.</p><p>[11] Jay Wengrow .数据结构与算法图解[M].北京:人民邮电出版社.2019.</p>]]></content>
      
      
      <categories>
          
          <category> MFC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2048 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>testBlog</title>
      <link href="2021/04/07/testblog/"/>
      <url>2021/04/07/testblog/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> testBlog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/04/06/hello-world/"/>
      <url>2021/04/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
